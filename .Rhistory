filter(nameLast == "Martinez", nameFirst == "J.D.")
Master %>%
filter(nameLast == "Martinez", nameFirst == "J. D. ")
Master %>%
filter(nameLast == "Martinez", nameFirst == "J. D.")
library(Lahman)
library(tidyverse)
library(lubridate)
library(ggrepel)
#Players with debut in year 2000
Master %>%
filter(year(debut) == 2001) %>%
pull(playerID) -> year2001.ids
#Players with at least 1000 atbats
Batting %>%
filter(playerID %in% year2001.ids) %>%
group_by(playerID) %>%
summarize(AB = sum(AB)) %>%
filter(AB > 1000) %>%
pull(playerID) -> player.ids
player.ids = c(player.ids, "martijd02", "judgeaa01")
# get statistics by age and add names
source("Chapter8_functions.R")
player.ids %>%
map_df(get_stats) %>%
left_join(Master %>% select(nameLast, nameFirst, playerID))-> player.stats
player.stats %>% filter(playerID == "martijd02")
player.stats %>% filter(playerID == "judgeaa01")
Master %>%
filter(year(debut) == 2001) %>%
pull(playerID) -> year2001.ids
#Players with at least 1000 atbats
Batting %>%
filter(playerID %in% year2001.ids) %>%
group_by(playerID) %>%
summarize(AB = sum(AB)) %>%
filter(AB > 1000) %>%
pull(playerID) -> player.ids
player.ids = c(player.ids, "martijd02", "judgeaa01")
# get statistics by age and add names
source("Chapter8_functions.R")
player.ids %>%
map_df(get_stats) %>%
left_join(Master %>% select(nameLast, nameFirst, playerID))-> player.stats
martinez <- data.frame(playerID = "martijd02",
Age = 31:40,
yearID = NA,
SLG = NA,
OPS = NA,
AVG = NA,
HR.rate = NA,
OB = NA,
PA = NA,
nameLast = NA,
nameFirst = NA)
martinez %>%
mutate(OBP = OB/PA) -> martinez
player.stats %>%
rbind(martinez) -> player.stats
#Judge
#JD
judge <- data.frame(playerID = "judgeaa01",
Age = 27:40,
yearID = NA,
SLG = NA,
OPS = NA,
AVG = NA,
HR.rate = NA,
OB = NA,
PA = NA,
nameLast = NA,
nameFirst = NA)
judge %>%
mutate(OBP = OB/PA) -> judge
player.stats %>%
rbind(judge) -> player.stats
player.stats %>% filter(playerID == "judgeaa01")
library(brms)
library(rstan)
player.stats %>%
mutate(AgeD = Age - 30,
Player = paste(nameFirst,nameLast, sep = " ")) -> player.stats
fit <- brm(OB | trials(PA) ~ AgeD + I(AgeD ^ 2) +
(AgeD + I(AgeD ^ 2) | Player),
data = player.stats,
family = binomial("logit"))
Player_Fits <- coef(fit)$Player[, "Estimate", ] %>%
as_tibble(rownames = "Player") %>%
rename(b0.hat = Intercept,
b1.hat = AgeD,
b2.hat = IAgeDE2)
#
# merge these estimates with our main dataset
player.stats <- inner_join(player.stats, Player_Fits, by = "Player")
# find estimates of OBP probs at each age
# note plogis is the logit function
player.stats %>%
mutate(OBP.pred = plogis(b0.hat + b1.hat * AgeD + b2.hat * AgeD^2)) -> player.stats
player.stats %>%
filter(playerID %in% c( "martijd02", "judgeaa01")) %>%
ggplot(aes(x = Age, y = OBP, group = playerID)) +
geom_point(aes(color = playerID)) +
geom_smooth(method = "lm",
formula = y ~ x + I(x^2),
se = FALSE,
fullrange = TRUE) +
geom_line(aes(y = OBP.pred), color = "red") +
labs(title = "Martinez and Judge") + ylim(0,0.5)
player.stats %>%
filter(playerID %in% c( "martijd02", "judgeaa01"))
View(martinez)
models <- player.stats %>%
split(pull(.,playerID)) %>%
map(~ lm(OBP ~ I(Age - 30) + I((Age-30)^2), data = .)) %>%
map_df(tidy, .id = "playerID")
# find peak ages using two models
library(broom)
models <- player.stats %>%
split(pull(.,playerID)) %>%
map(~ lm(OBP ~ I(Age - 30) + I((Age-30)^2), data = .)) %>%
map_df(tidy, .id = "playerID")
models
models %>%
group_by(playerID) %>%
summarize(A = estimate[1],
B = estimate[2],
C = estimate[3]) %>%
mutate(Peak.age = 30 - B/2/C) -> beta_coefs
View(beta_coefs)
head(player.stats)
beta_coefs
models %>%
group_by(playerID) %>%
summarize(A = estimate[1],
B = estimate[2],
C = estimate[3]) %>%
mutate(Peak.age = 30 - B/2/C) %>%
select(playerID, Peak.age, Type = "individual") -> beta_coefs
models %>%
group_by(playerID) %>%
summarize(A = estimate[1],
B = estimate[2],
C = estimate[3]) %>%
mutate(Peak.age = 30 - B/2/C) %>%
select(playerID, Peak.age) %>%
mutate(Type = "individual") -> beta_coefs
beta_coefs
player.stats
player.stats %>%
mutate(Peak.age = b1.hat/2/b2.hat,
Type = "pooled") -> player.stats
beta_coefs %>%
left_join(player.stats %>% select(playerID, Type, Peak.age))
beta_coefs %>%
left_join(player.stats %>% select(playerID, Type, Peak.age)) -> peaks
ggplot(peaks, aes(Type, Peak.age)) +
geom_point() +
coord_flip() +
increasefont() +
ggtitle("Estimates of Peak Age") +
centertitle()
ggplot(peaks, aes(Type, Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age") +
centertitle()
ggplot(peaks, aes(Type, Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age")
ggplot(peaks, aes(factor(Type), Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age")
player.stats
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age")
beta_coefs %>%
left_join(player.stats %>% select(playerID, Type, Peak.age)) -> peaks
View(peaks)
beta_coefs %>%
left_join(player.stats %>% select(playerID, Type, Peak.age),
by = "playerID") -> peaks
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age")
View(peaks)
rbind(player.stats -> peaks
beta_coefs %>%
rbind(player.stats) -> peaks
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age")
beta_coefs
beta_coefs %>%
rbind(player.stats %>% select(playerID, Peak.age, Type)) -> peaks
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age")
player.stats %>%
mutate(Peak.age = 30 - b1.hat/2/b2.hat,
Type = "pooled") -> player.stats
beta_coefs %>%
rbind(player.stats %>% select(playerID, Peak.age, Type)) -> peaks
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age")
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age") +
geom_text_repel(aes(label = playerID))
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age") +
geom_text_repel(aes(label = playerID))
aes(label = playerID))
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age") +
geom_text_repel(data = peaks %>%
filter(playerID == "cummiskey"),
aes(label = playerID))
peaks
beta_coefs %>%
rbind(player.stats %>%
select(playerID, Peak.age, Type) %>%
distinct) -> peaks
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age") +
geom_text_repel(data = peaks %>%
filter(playerID == "cummiskey"),
aes(label = playerID))
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age") +
geom_text_repel(aes(label = playerID))
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age") +
ylim(20,40)
player.ids
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age") +
ylim(20,40) +
geom_text_repel(data = filter(playerID %in% c("judgeaa01")),
aes(Peak.Age, label = playerID))
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age") +
ylim(20,40) +
geom_text_repel(data = filter(peaks,playerID %in% c("judgeaa01")),
aes(Peak.Age, label = playerID))
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age") +
ylim(20,40) +
geom_text_repel(data = filter(peaks,playerID %in% c("judgeaa01")),
aes(Peak.age, label = playerID))
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age") +
ylim(20,40) +
geom_text_repel(data = filter(peaks,playerID %in% c("judgeaa01")),
aes(y = Peak.age, label = playerID))
ggplot(peaks, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age") +
ylim(20,40) +
geom_text_repel(aes(y = Peak.age, label = playerID))
library(ggplot2)
library(dplyr)
library(Lahman)
library(tidyverse)
library(broom)
library(baseballr)
library(lme4)
library(mgcv)
library(ggrepel)
library(lubridate)
library(brms)
library(rstan)
library(broom)
pitches1 <- scrape_statcast_savant_batter_all(start_date = "2017-06-01",
end_date = "2017-06-10")
pitches2 <- scrape_statcast_savant_batter_all(start_date = "2017-06-11",
end_date = "2017-06-20")
pitches3 <- scrape_statcast_savant_batter_all(start_date = "2017-06-21",
end_date = "2017-06-30")
pitches = rbind(pitches1,pitches2,pitches3)
pitches %>% filter(type != "X") -> taken
path = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/"
file = "masterid.csv"
master_id <- read_csv(paste(path,file, sep = ""))
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("pitcher" = "mlb_id")) %>%
rename(pitcher_name = mlb_name) -> taken
taken%>%
group_by(pitcher_name)%>%
add_tally()%>%
filter(n>400)-> taken
strike_mod <- gam(type=="S" ~ s(plate_x,plate_z),
family = binomial, data = taken)
# there was no need to take a sample here
# also, you were filtering type != "X" here again...no need to do that
taken%>%
group_by() %>%  #you need to ungroup here...that is what was causing your error.
mutate(strike_prob= predict(strike_mod, newdata= ., type = "response")) -> taken
# Also, you have to have type == "S".  Type != "X" has two options, so it will throw an
#error because of logistic regression
mod_a <- glmer(type == "S" ~ strike_prob + (1|fielder_8) + (1|pitcher),data = taken,family = binomial)
summary(mod_a)
# Also, you have to have type == "S".  Type != "X" has two options, so it will throw an
#error because of logistic regression
mod_a <- glmer(type == "S" ~ strike_prob + (1|pitcher)  + (1|fielder_8),data = taken,family = binomial)
summary(mod_a)
library(ggplot2)
library(dplyr)
library(Lahman)
library(tidyverse)
library(broom)
library(baseballr)
library(lme4)
library(mgcv)
library(ggrepel)
library(lubridate)
library(brms)
library(rstan)
library(broom)
Master%>%
filter(year(debut) <= 1945, year(debut) >= 1940)-> player4.ids
player4.ids%>%
left_join(Batting %>% select(playerID,AB))-> player4.stats
player4.stats%>%
group_by(playerID)%>%
summarise(AB=sum(AB))%>%
filter(AB>=2000)
Master%>%
filter(year(debut) <= 1975, year(debut) >= 1970)-> player5.ids
player5.ids
player5.ids%>%
left_join(Batting %>% select(playerID,AB))-> player5.stats
player5.stats%>%
group_by(playerID)%>%
summarise(AB=sum(AB))%>%
filter(AB>=2000)
Master%>%
filter(year(debut) <= 1945, year(debut) >= 1940)-> player4.ids
player4.ids
player4.ids%>%
left_join(Batting %>% select(playerID,AB))-> player4.stats
player4.stats%>%
group_by(playerID)%>%
summarise(AB=sum(AB))%>%
filter(AB>=2000)%>%
pull(playerID)-> All_player4.ids
All_player4.ids
All_player4.ids %>%
map_df(get_stats) %>%
left_join(Master %>% select(nameLast, nameFirst,   playerID))-> All_player4.stats
All_player4.stats
All_player4.stats %>%
ggplot(aes(x = Age, y = OPS, group = playerID)) +
geom_smooth(method = "lm",
formula = y ~ x + I(x^2),
se = FALSE)
clean <- na.omit(All_player4.stats)
models <- clean %>%
split(pull(.,playerID)) %>%
map(~ lm(OPS ~ I(Age - 30) + I((Age-30)^2), data = .)) %>%
map_df(tidy, .id = "playerID")
models %>%
group_by(playerID) %>%
summarize(A = estimate[1],
B = estimate[2],
C = estimate[3]) %>%
mutate(Peak.age = 30 - B/2/C) %>%
select(playerID, Peak.age) %>%
mutate(Type = "individual") -> beta_coefs
clean2 <- na.omit(beta_coefs)
ggplot(clean2, aes(x = Type, y = Peak.age)) +
geom_point() +
coord_flip() +
ggtitle("Estimates of Peak Age") +
ylim(20,40)
All_player4.ids
Batting %>%
filter(playerID == "dimagdo01", yearID %in% c(1953,1954))
Batting %>%
filter(playerID == "dimagdo01", yearID %in% c(1952,1954))
Batting %>%
filter(playerID == "dimagdo01", yearID > 1953)
Batting %>%
filter(playerID == "dimagdo01", yearID > 1952)
Batting %>%
filter(playerID == "dimagdo01", yearID > 1951)
Batting %>%
filter(playerID == "rizzuph01", yearID > 1951)
library(Lahman)
library(tidyverse)
source("Chapter8_functions.R")
vars <- c("G","AB","R","H","X2B","X3B","HR","RBI","BB","SO","SB","yearID")
Batting%>%
group_by(playerID)%>%
summarize_at(vars, sum, na.rm = TRUE) -> C.totals
C.totals%>%
mutate(AVG = H/AB)%>%
filter(H >= 3200)%>%
inner_join(Master, by = "playerID")%>%
mutate(Age = yearID - birthYear)-> hit_3200
pitches1 <- scrape_statcast_savant_batter_all(start_date = "2017-06-01",
end_date = "2017-06-10")
pitches2 <- scrape_statcast_savant_batter_all(start_date = "2017-06-11",
end_date = "2017-06-20")
pitches3 <- scrape_statcast_savant_batter_all(start_date = "2017-06-21",
end_date = "2017-06-30")
pitches = rbind(pitches1,pitches2,pitches3)
pitches %>% filter(type != "X") -> taken2
path = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/"
file = "masterid.csv"
master_id <- read_csv(paste(path,file, sep = ""))
taken2 %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_8" = "mlb_id","pitcher" = "mlb_id")) %>%
rename(centerfielder_name = mlb_name) -> taken2
taken2%>%
group_by(centerfielder_name,pitcher)%>%
add_tally()%>%
filter(n>400)-> taken2
strike_mod <- gam(type=="S" ~ s(plate_x,plate_z),
family = binomial, data = taken2)
# there was no need to take a sample here
# also, you were filtering type != "X" here again...no need to do that
taken2%>%
group_by() %>%  #you need to ungroup here...that is what was causing your error.
mutate(strike_prob= predict(strike_mod, newdata= ., type = "response")) -> taken2
# Also, you have to have type == "S".  Type != "X" has two options, so it will throw an
#error because of logistic regression
mod_a <- glmer(type == "S" ~ strike_prob + (1|pitcher)  + (1|fielder_8),data = taken,family = binomial)
summary(mod_a)
# Also, you have to have type == "S".  Type != "X" has two options, so it will throw an
#error because of logistic regression
mod_a <- glmer(type == "S" ~ strike_prob + (1|pitcher)  + (1|fielder_8),data = taken2,family = binomial)
summary(mod_a)
library(tidyverse)
library(Lahman)
library(lubridate)
library(devtools)
library(baseballr)
library(lme4)
pitches1 <- scrape_statcast_savant_batter_all(start_date = "2017-06-01", end_date = "2017-06-10")
pitches2 <- scrape_statcast_savant_batter_all(start_date = "2017-06-11", end_date = "2017-06-20")
pitches3 <- scrape_statcast_savant_batter_all(start_date = "2017-06-21", end_date = "2017-06-30")
pitches = rbind(pitches1,pitches2,pitches3)
pitches %>% filter(type != "X") -> taken
path = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/"
file = "masterid.csv"
master_id <- read_csv(paste(path,file, sep = ""))
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("pitcher" = "mlb_id")) %>%
rename(pitcher_name = mlb_name) -> taken
taken %>% count(pitcher_name) %>% filter(n >= 400) %>% arrange(desc(n))-> counted
taken %>% filter(pitcher_name %in% counted$pitcher_name)  -> taken
model.random <- glmer(type == "S" ~ (1|pitcher_name),
family = "binomial",
data = taken)
model.random %>%
ranef() %>%
as_tibble() %>%
transmute(id = levels(grp),
effect = condval) %>%
arrange(desc(effect)) -> pitcher_effects
pitcher_effects %>% head(5)
pitcher_effects %>% tail(5)
pitcher_effects %>%
ggplot(aes(x = effect)) +
geom_dotplot()
model.location <- gam(type == "S" ~ s(plate_x, plate_z),
family = "binomial",
data = taken)
taken %>%
mutate(strike_prob = predict(model.location,
type = "response")) -> taken
taken %>%
mutate(strike_prob = predict(model.location,
type = "response",
newdata = .)) -> taken
tibble(x = 15:25,
score = round(x/25, 1))
tibble(x = 15:25,
score = round(x/25, 2))
8398+2062
