#this function finds the top n.starters in games started in a
#data frame of pitchers with at least GS.min starts
# Arguments
# d - data frame containing pitchers
# GS.min - minimum number of start; default is 10
# n.starters - the number of starters to return
get_starting_pitchers <- function(d,n.starters,GS.min = 10){
d = d %>%
filter(GS >= GS.min) %>%
arrange(desc(GS)) %>%
head(n.starters)
return(d)
}
get_closers <- function(d,n.closers,SV.min = 20){
d = d %>%
filter(SV >= SV.min) %>%
arrange(desc(SV)) %>%
head(n.closers)
return(d)
}
top.closers = Pitching %>%
filter(yearID >= 1970) %>%
split(list(pull(.,yearID),
pull(.,teamID)),
drop = TRUE) %>%
map_df(get_closers,
n.closers = 5,
SV.min = 25)
top.closers = Pitching %>%
filter(yearID >= 1970) %>%
split(list(pull(.,yearID),
pull(.,teamID)),
drop = TRUE) %>%
map_df(get_closers,
n.closers = 5,
SV.min = 25)
get_closers(Pitching, 10,10)
get_closers <- function(d,n.closers,SV.min = 20){
d = d %>%
filter(SV >= SV.min) %>%
arrange(desc(SV)) %>%
head(n.closers)
steve
return(d)
}
get_closers(Pitching, 10,10)
get_closers <- function(d,n.closers,SV.min = 20){
d = d %>%
filter(SV >= SV.min) %>%
arrange(desc(SV)) %>%
head(n.closers)
return(d)
}
#this function finds the top n.starters in games started in a
#data frame of pitchers with at least GS.min starts
# Arguments
# d - data frame containing pitchers
# GS.min - minimum number of start; default is 10
# n.starters - the number of starters to return
get_starting_pitchers <- function(d,n.starters,GS.min = 10){
d = d %>%
filter(GS >= GS.min) %>%
arrange(desc(GS)) %>%
head(n.starters)
return(d)
}
get_starting_pitchers(Pitching, n.starters = 10)
steve
#this function finds the top n.starters in games started in a
#data frame of pitchers with at least GS.min starts
# Arguments
# d - data frame containing pitchers
# GS.min - minimum number of start; default is 10
# n.starters - the number of starters to return
get_starting_pitchers <- function(d,n.starters,GS.min = 10){
d = d %>%
filter(GS >= GS.min) %>%
arrange(desc(GS)) %>%
head(n.starters)
steve
return(d)
}
get_starting_pitchers(Pitching, n.starters = 10)
urlRemote = "https://raw.githubusercontent.com/"
pathGithub = "maxtoki/baseball_R/master/data/"
fileName = "game_log_header.csv"
game_log_headers <- read_csv(file = paste0(urlRemote,pathGithub,fileName))
library(tidyverse)
game_log_headers <- read_csv(file = paste0(urlRemote,pathGithub,fileName))
library(Lahman)
library(tidyverse)
Teams
my_teams <- Teams %<% filter(yearID >= 1997, yearID <= 2001)
library(tidyverse)
my_teams <- Teams %<% filter(yearID >= 1997, yearID <= 2001)
my_teams <- Teams %>% filter(yearID >= 1997, yearID <= 2001)
my_teams
SeriesPost
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)
my_series
SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser)
SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather()
SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(yearID)
SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "yearID")
SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(-yearID)
SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "teamID", value = "result", -yearID)
SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID)
SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
mutate(playoff = 1)
#determine which teams made the playoffs each year
#Use the SeriesPost data
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoff = 1)
my_series
#Merge with my_teams
my_teams %>%
left_join(my_series, by = c("yearID", "teamID"))
#Merge with my_teams
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
replace_na(0)
my_teams %>%
left_join(my_series, by = c("yearID", "teamID"))
my_teams <- Teams %>%
filter(yearID >= 1997, yearID <= 2001)
#determine which teams made the playoffs each year
#Use the SeriesPost data
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoff = 1)
my_teams %>%
left_join(my_series, by = c("yearID", "teamID"))
#Merge with my_teams
my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
mutate(playoff = replace_na(0))
#Merge with my_teams
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
mutate(playoff = replace_na(0))
my_teams %>%
group_by(yearID) %>%
summarize(teams.playoffs = n())
my_teams %>%
group_by(yearID) %>%
summarize(teams.playoffs = sum(playoff))
my_teams <- Teams %>%
filter(yearID >= 1997, yearID <= 2001)
#determine which teams made the playoffs each year
#Use the SeriesPost data
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoff = 1)
#Merge with my_teams
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID"))
#subset to get my teams
my_teams <- Teams %>%
filter(yearID >= 1997, yearID <= 2001)
#determine which teams made the playoffs each year
#Use the SeriesPost data
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoff = 1)
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID"))
my_teams
#Merge with my_teams
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
mutate(playoff = replace_na(playoff,0))
#Merge with my_teams
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
mutate(playoff = replace_na(.$playoff,0))
#Merge with my_teams
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
mutate(playoff = replace_na(playoff,0))
my_teams
#Merge with my_teams
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
replace_na(list(x = 0))
my_teams
my_teams <- Teams %>%
filter(yearID >= 1997, yearID <= 2001)
#determine which teams made the playoffs each year
#Use the SeriesPost data
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoff = 1)
#Merge with my_teams
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
replace_na(list(playoff = 0))
my_teams
my_teams %>%
group_by(yearID) %>%
summarize(teams.playoffs = sum(playoff))
my_teams %>%
ggplot(aes(x = W, y = R, color = playoff)) +
geom_point()
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoff = factor(1))
#Merge with my_teams
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
replace_na(list(playoff = 0))
#let's check if we did this correctly
my_teams %>%
group_by(yearID) %>%
summarize(teams.playoffs = sum(playoff))
#determine which teams made the playoffs each year
#Use the SeriesPost data
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoffs = factor(1))
#Merge with my_teams
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
replace_na(list(playoffs = 0))
#let's check if we did this correctly
my_teams %>%
group_by(yearID) %>%
summarize(teams.playoffs = sum(playoffs))
#determine which teams made the playoffs each year
#Use the SeriesPost data
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoffs = 1)
#Merge with my_teams
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
replace_na(list(playoffs = 0))
#let's check if we did this correctly
my_teams %>%
group_by(yearID) %>%
summarize(teams.playoffs = sum(playoffs))
#determine which teams made the playoffs each year
#Use the SeriesPost data
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoffs = 1)
#Merge with my_teams
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
replace_na(list(playoffs = 0))
head(my_teams)
#determine which teams made the playoffs each year
#Use the SeriesPost data
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoffs = 1)
my_teams <- Teams %>%
filter(yearID >= 1997, yearID <= 2001)
#determine which teams made the playoffs each year
#Use the SeriesPost data
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoffs = 1)
#Merge with my_teams
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
replace_na(list(playoffs = 0))
#let's check if we did this correctly
my_teams %>%
group_by(yearID) %>%
summarize(teams.playoffs = sum(playoffs))
my_teams <- Teams %>%
filter(yearID >= 1997, yearID <= 2001)
#determine which teams made the playoffs each year
#Use the SeriesPost data
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoffs = 1)
#Merge with my_teams, replace NA, and change
#playoff to a factor variable
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
replace_na(list(playoffs = 0)) %>%
mutate(playoffs = playoffs)
#let's check if we did this correctly
my_teams %>%
group_by(yearID) %>%
summarize(teams.playoffs = sum(playoffs))
my_teams %>%
ggplot(aes(x = W, y = R, color = factor(playoffs))) +
geom_point()
library(ggrepel)
my_teams$teamID
my_teams %>%
ggplot(aes(x = W, y = R, color = factor(playoffs))) +
geom_point() +
labs(x = "Wins", y = "Runs Scored", color = "Made Playoffs",
title = "Wins and Making the Playoffs") +
geom_text_repel(data = filter(my_teams, teamID == "OAK"),
aes(x = W, y = R, label = teamID))
my_teams %>%
ggplot(aes(x = W, y = R, color = factor(playoffs))) +
geom_point() +
labs(x = "Wins", y = "Runs Scored", color = "Made Playoffs",
title = "Wins and Making the Playoffs") +
geom_text_repel(data = filter(my_teams, teamID == "OAK"),
aes(x = W, y = R, color = playoffs,label = teamID))
my_teams %>%
ggplot(aes(x = W, y = R, color = factor(playoffs))) +
geom_point() +
labs(x = "Wins", y = "Runs Scored", color = "Made Playoffs",
title = "Wins and Making the Playoffs") +
geom_text_repel(data = filter(my_teams, teamID == "OAK"),
aes(x = W, y = R, color = factor(playoffs),label = teamID))
my_teams %>%
ggplot(aes(x = W, y = R, color = factor(playoffs))) +
geom_point() +
labs(x = "Wins", y = "Runs Scored", color = "Made Playoffs",
title = "Wins and Making the Playoffs") +
geom_text_repel(data = filter(my_teams, teamID == "OAK"),
aes(x = W, y = R,label = teamID))
my_teams %>%
ggplot(aes(x = W, y = R, color = factor(playoffs))) +
geom_point() +
labs(x = "Wins", y = "Runs Scored", color = "Made Playoffs",
title = "Wins and Making the Playoffs") +
geom_text_repel(data = filter(my_teams, teamID == "OAK"),
aes(x = W, y = R,label = paste(teamID,yearID)))
my_teams
my_teams %>%
ggplot(aes(x = W, y = R, color = factor(playoffs))) +
geom_point() +
labs(x = "Wins", y = "Runs Scored", color = "Made Playoffs",
title = "Wins and Making the Playoffs") +
geom_text_repel(data = filter(my_teams, teamID == "OAK"),
aes(x = W, y = R,label = paste(name,yearID)))
my_teams %>%
ggplot(aes(x = W, y = R, color = factor(playoffs))) +
geom_point() +
labs(x = "Wins", y = "Runs Scored", color = "Made Playoffs",
title = "Wins and Making the Playoffs") +
geom_text_repel(data = filter(my_teams, teamID == "OAK"),
aes(x = W, y = R,label = paste(teamID,yearID)))
#calculate the run differential
my_teams = my_teams %>%
mutate(RD = R - RA)
my_teams %>%
ggplot(aes(x= RD,y = W)) +
geom_point()
my_teams %>%
ggplot(aes(x= RD,y = W, color = factor(playoffs))) +
geom_point()
my_teams %>%
ggplot(aes(x= RD,y = W, color = factor(playoffs))) +
geom_point() +
geom_text_repel(data = filter(my_teams, W > 110),
aes(x = RD, Y = W, label = paste(teamID,yearID)))
my_teams %>% filter(W > 110)
#subset to get my teams
my_teams <- Teams %>%
filter(yearID >= 1997, yearID <= 2001)
#determine which teams made the playoffs each year
#Use the SeriesPost data
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoffs = 1)
head(my_series)
#determine which teams made the playoffs each year
#Use the SeriesPost data
my_series <- SeriesPost %>%
filter(yearID >= 1997, yearID <= 2001)%>%
select(yearID, teamIDwinner, teamIDloser) %>%
gather(key = "result", value = "teamID", -yearID) %>%
select(-result) %>%
mutate(playoffs = 1) %>%
unique()
head(my_series)
#Merge with my_teams, replace NA, and change
#playoff to a factor variable
my_teams = my_teams %>%
left_join(my_series, by = c("yearID", "teamID")) %>%
replace_na(list(playoffs = 0)) %>%
mutate(playoffs = playoffs)
#let's check if we did this correctly
my_teams %>%
group_by(yearID) %>%
summarize(teams.playoffs = sum(playoffs))
my_teams %>%
ggplot(aes(x = W, y = R, color = factor(playoffs))) +
geom_point() +
labs(x = "Wins", y = "Runs Scored", color = "Made Playoffs",
title = "Wins and Making the Playoffs") +
geom_text_repel(data = filter(my_teams, teamID == "OAK"),
aes(x = W, y = R,label = paste(teamID,yearID)))
#calculate the run differential
my_teams = my_teams %>%
mutate(RD = R - RA)
my_teams %>%
ggplot(aes(x= RD,y = W, color = factor(playoffs))) +
geom_point() +
geom_text_repel(data = filter(my_teams, W > 110),
aes(x = RD, Y = W, label = paste(teamID,yearID)))
my_teams %>%
ggplot(aes(x= RD,y = W, color = factor(playoffs))) +
geom_point() +
geom_text_repel(data = filter(my_teams, W > 110),
aes(label = paste(teamID,yearID)))
#let's check if we did this correctly
my_teams %>%
group_by(yearID) %>%
summarize(teams.playoffs = sum(playoffs))
my_Teams$G
my_teams$G
my_teams %>%
ggplot(aes(x= RD,y = W, color = factor(playoffs))) +
geom_point() +
geom_text_repel(data = filter(my_teams, W > 110 | W < 60),
aes(label = paste(teamID,yearID)))
my_teams %>%
ggplot(aes(x= RD,y = W, color = factor(playoffs))) +
geom_point() +
geom_text_repel(data = filter(my_teams, W > 110 | W < 60),
aes(label = paste(teamID,yearID))) +
geom_smooth(aes(x = RD, y = W))
my_teams %>%
ggplot(aes(x= RD,y = W, color = factor(playoffs))) +
geom_point() +
geom_text_repel(data = filter(my_teams, W > 110 | W < 60),
aes(label = paste(teamID,yearID))) +
geom_smooth(aes(x = RD, y = W), method= "lm")
#fit a linear regression model
lin.fit = lm(W ~ RD, data = my_teams)
summary(lin.fit)
library(broom)
my_teams %>%
augment(lin.fit, data = my_teams)
augment(lin.fit, data = my_teams)
my_teams = augment(lin.fit, data = my_teams)
my_teams %>%
ggplot(aes(x = W, y = .resid)) +
geom_point()
my_teams %>%
ggplot(aes(x = W, y = .resid, color = factor(playoffs))) +
geom_point()
my_teams %>%
ggplot(aes(x = W, y = .resid, color = factor(playoffs))) +
geom_point() +
geom_text_repel(data = filter(my_teams, abs(.resid) > 7.5),
aes(label = paste(teamID,yearID)))
