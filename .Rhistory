hand_grid <- taken %>%
data_grid(px = seq_range(px, n = 100),
pz = seq_range(pz, n = 100),
stand)
hand_grid_hats <- hand_mod %>%
augment(type.predict = "response",
newdata = hand_grid)
#plot the results
tile_plot <- k_zone_plot %+% grid_hats +
geom_tile(aes(fill = .fitted),alpha = 0.7) +
scale_fill_gradient(low = "gray92", high = "blue")
tile_plot
#plot predictions by handedness
tile_plot %+% hand_grid_hats +
facet_grid(stand)
#plot predictions by handedness
tile_plot %+% hand_grid_hats +
facet(stand)
#plot predictions by handedness
tile_plot %+% hand_grid_hats +
facet_grid(stand ~ .)
#plot predictions by handedness
tile_plot %+% hand_grid_hats +
facet_grid(. ~ stand)
diffs <- hand_grid_hats %>%
group_by(px,pz) %>%
summarize(N - n(), .fitted = diff(.fitted))
diffs <- hand_grid_hats %>%
group_by(px,pz) %>%
summarize(N = n(), .fitted = diff(.fitted))
tile_plot %+% diffs
head(diffs)
head(hand_grid_hats)
(0.60/0.4)/(0.58/0.42)
k_zone_plot %+% sample_n(taken, 10000) +
aes(color = type) +
geom_point(alpha = 0.1) +
scale_color_manual(values = c("blue", "black"))
lm(type == "S" ~ px + pz, data = taken)
linear_model = lm(type == "S" ~ px + pz, data = taken)
summary(linear_model)
linear_model = lm(type == "C" ~ px + pz, data = taken)
summary(linear_model)
taken %>% group_by(stand) %>% summarize(N = n())
library(tidyverse)
urlRemote = "https://raw.githubusercontent.com/"
pathGithub = "maxtoki/baseball_R/master/data/"
fileName = "game_log_header.csv"
game_log_headers <- read_csv(file = paste0(urlRemote,pathGithub,fileName))
# this is the path of the folder where you downloaded the game logs.
my_path = "C:/Users/kevin.cummiskey/Documents/MA388_GameLogs/"
files = list.files(path = my_path)
files = paste(my_path,files, sep = "")
#read in data
game_logs = files %>%
map(read_csv,
col_names = names(game_log_headers),
na = character()) %>%
reduce(rbind)
library(Lahman)
Seasons %>% filter(yearID == 1968)
library(tidyverse)
Seasons %>% filter(yearID == 1968)
Teams %>% filter(yearID == 1968)
taken %>%
group_by(type, stand) %>%
count()
library(tidyverse)
#Read in the pitches you saved above
pitches <- read_csv(file = "C:/Users/kevin.cummiskey/Data/pitches.csv")
#we only want balls and called strikes
#note the types are different that in our text!!
taken <- pitches %>%
filter(type %in% c("C","B"))
taken %>%
group_by(type, stand) %>%
count()
taken %>%
group_by(type, stand) %>%
count() %>%
gather()
taken %>%
group_by(type, stand) %>%
count() %>%
spread()
taken %>%
group_by(type, stand) %>%
count() %>%
spread(type, n)
taken %>%
group_by(type, stand) %>%
count() %>%
spread(stand, n)
log((12703/24050)/(8864/18141))
model1 = gam(type == "C" ~ stand, family = binomial, data = taken)
library(mgcv)
model1 = gam(type == "C" ~ stand, family = binomial, data = taken)
summary(model1)
#fit the model above
model_stand <- gam(type == "C" ~ Stand, family = binomial, data = taken)
#fit the model above
model_stand <- gam(type == "C" ~ stand, family = binomial, data = taken)
summary(model_stand)
log(0.077)
exp(0.077)
#if there is code you use a lot, you can put it in a separate file and
#source it.  The file kzoneplot contains the code on page 165 for creating
# the strike zone
source("kzoneplot.R")
k_zone_plot %+% sample_n(taken, 10000) +
aes(color = type) +
geom_point(alpha = 0.1) +
scale_color_manual(values = c("blue", "black"))
results
results = taken %>%
group_by(type, stand) %>%
count() %>%
spread(stand, n)
results
results = taken %>%
group_by(type, stand) %>%
count() %>%
spread(stand, n) %>%
replace(type = c("Ball", "Called Strike"))
results$type = c("Ball", "Called Strike")
kable(results)
library(knitr)
kable(results)
library(mgcv)
strike_mod <- gam(type == "C" ~ s(px, pz),
family = binomial,
data = taken)
unique(taken$zone)
Batting %>%
filter(playerID == "eatonad02", yearID == 2016) %>%
mutate(AVG = H / AB) %>%
mutate(BAT_ID = "eatoa02") %>%
select(BAT_ID, AVG)-> eaton_AVG_stats
eaton_AVG_stats
data2016 %>%
filter(BAT_ID == "eatoa002") -> eaton
data2016 <- read_csv(file = "data/data2016.csv")
data2016 %>%
filter(BAT_ID == "eatoa002") -> eaton
new_eaton <- inner_join(eaton_AVG_stats, eaton, by = "BAT_ID")
data2016 %>% select(BAT_ID)
eaton_AVG_stats
eaton
Batting %>%
filter(playerID == "eatonad02", yearID == 2016) %>%
mutate(AVG = H / AB) %>%
mutate(BAT_ID = "eatoa002") %>%
select(BAT_ID, AVG)-> eaton_AVG_stats
data2016 %>%
filter(BAT_ID == "eatoa002") -> eaton
new_eaton <- inner_join(eaton_AVG_stats, eaton, by = "BAT_ID")
library(Lahman)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(Lahman)
```{}
Batting %>%
filter(yearID == 2018) %>%
ggplot(aes(x = H, y = HR)) +
geom_point()
library(Lahman)
library(Lahman)
library(tidyverse)
library(broom)
data2016 <- read.csv("data/data2016.csv")
#From Pg. 116
data2016 %>%
left_join(select(RUNS, -Outs), by = "STATE") %>%
rename(Runs.State = Mean) %>%
left_join(select(RUNS, -Outs), by = c("NEW.STATE" = "STATE")) %>%
rename(Runs.New.State = Mean) %>%
replace_na(list(Runs.New.State = 0)) %>%
mutate(run_value = Runs.New.State - Runs.State + RUNS.SCORED) -> data2016
names(data2016)
data2016 %>%
filter(EVENT_CD == 22) %>%
summarise(average = mean(run_value))
#From Pg. 116
data2016 %>%
left_join(select(RUNS, -Outs), by = "STATE") %>%
rename(Runs.State = Mean) %>%
left_join(select(RUNS, -Outs), by = c("NEW.STATE" = "STATE")) %>%
rename(Runs.New.State = Mean) %>%
replace_na(list(Runs.New.State = 0)) %>%
mutate(run_value = Runs.New.State - Runs.State + RUNS.SCORED) -> data2016
library(ggplot2)
library(dplyr)
library(Lahman)
library(tidyverse)
library(broom)
devtools::install_github("BillPetti/baseballR")
library(tidyverse)
library(baseballr)
correa <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-31",
playerid = 621043,
player_type = "batter")
View(correa)
library(tidyverse)
library(Lahman)
pitches = read_csv("data/pitches2016.csv")
pitches %>% filter(type %in% c("C","B")) -> taken
library(mgcv)
model = gam(type == "C" ~ count, family = "binomial",
data = taken)
summary(model)
model = gam(type == "C" ~ s(px,pz) + count, family = "binomial",
data = taken)
summary(model)
Batting %>% filter(lgID == "AL",
AB > 500,
yearID == 1968) %>%
mutate(AVG = H/AB) %>% arrange(desc(AVG)) %>% head(1)
Batting %>% filter(yearID %in% c(1968, 1970)) %>%
group_by(yearID) %>%
summarise(AVG = sum(H)/sum(AB))
pitches <- read_csv("data/pitches2016.csv")
pitches %>% filter(type %in% c("C","B")) -> taken
library(mgcv)
model = gam(type == "C" ~ count, family = "binomial",
data = taken)
summary(model)
model = gam(type == "C" ~ count, family = "binomial",
data = taken)
summary(model)
model = gam(type == "C" ~ s(px, pz) + count, family = "binomial",
data = taken)
summary(model)
library(tidyverse)
library(lme4)
pitches <- read_csv("data/pitches2016.csv")
pitches %>% filter(type %in% c("C","B")) -> taken
# load baseballr package
library(baseballr)
#read in data
pitches <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-15")
#read in data
pitches <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-10")
#read in data
pitches <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-2")
library(Lahman)
names(Master)
names(pitches)
pitches$fielder_2_1
# rename fielder_2_1 to catcher
pitches %>% rename(catcher = fielder_2_1)
# rename fielder_2_1 to catcher
pitches %>% rename(catcher = fielder_2_1) -> pitches
#read in data
pitches <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-2")
#called strikes and balls only
pitches %>% filter(type %in% c("C","B")) -> taken
# rename fielder_2_1 to catcher
taken %>% rename(catcher = fielder_2_1) -> taken
# calculate called strike probability by catcher
taken %>%
group_by(catcher) %>%
count(type)
summary(as.factor(pitches$type))
#called strikes and balls only
pitches %>% filter(type %in% c("S","B")) -> taken
# rename fielder_2_1 to catcher
taken %>% rename(catcher = fielder_2_1) -> taken
# calculate called strike probability by catcher
taken %>%
group_by(catcher) %>%
count(type)
# calculate called strike probability by catcher
taken %>%
group_by(catcher) %>%
count(type) %>%
pivot_wider(id_cols = catcher, names_from = type, values_from = n)
# calculate called strike probability by catcher
taken %>%
group_by(catcher) %>%
count(type) %>%
pivot_wider(id_cols = catcher, names_from = type, values_from = n) -> catchers
# calculate called strike probability
catchers %>% mutate(strike.prob = S/(S+B)) -> catchers
# calculate called strike probability and odds
catchers %>% mutate(strike.prob = S/(S+B),
strike.odds = strike.prob/(1-strike.prob)) -> catchers
catchers
catchers %>%
ggplot(aes(x = strike.prob)) %>%
geom_dotplot()
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot()
catchers %>%
ggplot(aes(x = strike.odds)) +
geom_dotplot()
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot()
# filter catchers with less than min.pitches
catchers %>% filter(S + B >= min.pitches) -> catchers
min.pitches = 100
# filter catchers with less than min.pitches
catchers %>% filter(S + B >= min.pitches) -> catchers
# calculate called strike probability and odds
catchers %>% mutate(strike.prob = S/(S+B),
strike.odds = strike.prob/(1-strike.prob)) -> catchers
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot()
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot() +
ylim(0,1)
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot() +
xlim(0,1)
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot()
# rename fielder_2_1 to catcher
taken %>% rename(catcher = fielder_2_1) -> taken
# count balls and strikes by catcher
taken %>%
group_by(catcher) %>%
count(type) %>%
pivot_wider(id_cols = catcher, names_from = type, values_from = n) -> catchers
min.pitches = 100
# filter catchers with less than min.pitches
catchers %>% filter(S + B >= min.pitches) -> catchers
# calculate called strike probability and odds
catchers %>% mutate(strike.prob = S/(S+B)) -> catchers
catchers %>% head(5)
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot() +
labs(x = "strike probability",
title = "Distribution of called strike probabilities by catcher")
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot() +
labs(x = "strike probability",
title = "Distribution of called strike probabilities by catcher") +
theme(axis.text.y = element_blank())
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot() +
labs(x = "strike probability",
title = "Distribution of called strike probabilities by catcher") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
model.fixed <- glm(type == "S" ~ catcher,
family = "binomial",
data = taken)
summary(model.fixed)
model.fixed <- glm(type == "S" ~ as.factor(catcher),
family = "binomial",
data = taken)
summary(model.fixed)
library(lme4)
model.random <- glmer(type == "S" ~ catcher,
family = "binomial",
data = taken)
model.random <- glmer(type == "S" ~ (1|catcher),
family = "binomial",
data = taken)
summary(model.random)
model.random %>%
ranef()
model.random %>%
ranef() %>%
as.tibble() %>%
transmute(id = as.numeric(levels(grp)),
effect = condval)
model.random %>%
ranef() %>%
as.tibble() %>%
transmute(id = as.numeric(levels(grp)),
effect = condval) -> catcher_effects
catcher_effects %>% head(5)
catcher_effects %>%
ggplot(aes(x = effect)) +
geom_dotplot()
```{r, fig.height = 2}
model.random.adj <- glmer(type == "S" ~ s(px,pz) + (1|catcher),
family = "binomial",
data = taken)
library(mgcv)
#fit pitch location model
model.location <- gam(type == "S" ~ s(px, pz),
family = "binomial",
data = taken)
names(taken)
pitches$plate_x
pitches$plate_z
#fit pitch location model (plate_x = px, plate_z = pz)
model.location <- gam(type == "S" ~ s(plate_x, plate_z),
family = "binomial",
data = taken)
library(broom)
type = "response")
#get predictions from location model
taken %>%
mutate(strike_prob = predict(model.location, newdata = .,
type = "response"))
#get predictions from location model
taken %>%
mutate(strike_prob = predict(model.location, newdata = .,
type = "response")) -> taken
taken %>% select(strike_prob)
#fit random effects model adjusting for pitch location
model.random.adj <- glmer(type == "S" ~ strike_prob + (1|catcher),
family = "binomial",
data = taken)
summary(model.random.adj)
#get random effects
model.random.adj %>%
ranef() %>%
as.tibble() %>%
transmute(id = as.numeric(levels(grp)),
effect = condval) -> catcher_effects.adj
catcher_effects.adj %>% head(5)
catcher_effects.adj %>%
ggplot(aes(x = effect)) +
geom_dotplot()
#add catcher's name to the taken data.frame
master_id <- read_csv(file = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/masterid.csv")
head(master_id)
master_id$mlb_name
#merge with taken
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_2_1" = "mlb_id"))
#read in data
pitches <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-2")
#called strikes and balls only
pitches %>% filter(type %in% c("S","B")) -> taken
#add catcher's name to the taken data.frame
#get master ID list
master_id <- read_csv(file = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/masterid.csv")
#merge with taken
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_2_1" = "mlb_id")) -> taken
#called strikes and balls only
pitches %>% filter(type %in% c("S","B")) -> taken
#add catcher's name to the taken data.frame
#get master ID list
master_id <- read_csv(file = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/masterid.csv")
#merge with taken
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_2_1" = "mlb_id")) %>%
rename(catcher = fielder_2_1) -> taken
head(taken)
taken %>% select(catcher)
#called strikes and balls only
pitches %>% filter(type %in% c("S","B")) -> taken
#add catcher's name to the taken data.frame
#get master ID list
master_id <- read_csv(file = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/masterid.csv")
#merge with taken
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_2_1" = "mlb_id")) %>%
rename(catcher = mlb_id) -> taken
#called strikes and balls only
pitches %>% filter(type %in% c("S","B")) -> taken
#add catcher's name to the taken data.frame
#get master ID list
master_id <- read_csv(file = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/masterid.csv")
#merge with taken
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_2_1" = "mlb_id")) %>%
rename(catcher = mlb_name) -> taken
taken$catcher
library(ggrepel)
# count balls and strikes by catcher
taken %>%
group_by(catcher) %>%
count(type) %>%
pivot_wider(id_cols = catcher, names_from = type, values_from = n) -> catchers
min.pitches = 100
# filter catchers with less than min.pitches
catchers %>% filter(S + B >= min.pitches) -> catchers
# calculate called strike probability and odds
catchers %>% mutate(strike.prob = S/(S+B)) -> catchers
catchers %>% head(5)
arrange(desc(strike.prob)-> catchers
)
# calculate called strike probability and odds
catchers %>%
mutate(strike.prob = S/(S+B)) %>%
arrange(desc(strike.prob))-> catchers
catchers %>% head(5)
catchers %>% tail(5)
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot() +
labs(x = "strike probability",
title = "Distribution of called strike probabilities by catcher") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
