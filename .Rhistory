library(mgcv)
model = gam(type == "C" ~ count, family = "binomial",
data = taken)
summary(model)
model = gam(type == "C" ~ count, family = "binomial",
data = taken)
summary(model)
model = gam(type == "C" ~ s(px, pz) + count, family = "binomial",
data = taken)
summary(model)
library(tidyverse)
library(lme4)
pitches <- read_csv("data/pitches2016.csv")
pitches %>% filter(type %in% c("C","B")) -> taken
# load baseballr package
library(baseballr)
#read in data
pitches <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-15")
#read in data
pitches <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-10")
#read in data
pitches <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-2")
library(Lahman)
names(Master)
names(pitches)
pitches$fielder_2_1
# rename fielder_2_1 to catcher
pitches %>% rename(catcher = fielder_2_1)
# rename fielder_2_1 to catcher
pitches %>% rename(catcher = fielder_2_1) -> pitches
#read in data
pitches <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-2")
#called strikes and balls only
pitches %>% filter(type %in% c("C","B")) -> taken
# rename fielder_2_1 to catcher
taken %>% rename(catcher = fielder_2_1) -> taken
# calculate called strike probability by catcher
taken %>%
group_by(catcher) %>%
count(type)
summary(as.factor(pitches$type))
#called strikes and balls only
pitches %>% filter(type %in% c("S","B")) -> taken
# rename fielder_2_1 to catcher
taken %>% rename(catcher = fielder_2_1) -> taken
# calculate called strike probability by catcher
taken %>%
group_by(catcher) %>%
count(type)
# calculate called strike probability by catcher
taken %>%
group_by(catcher) %>%
count(type) %>%
pivot_wider(id_cols = catcher, names_from = type, values_from = n)
# calculate called strike probability by catcher
taken %>%
group_by(catcher) %>%
count(type) %>%
pivot_wider(id_cols = catcher, names_from = type, values_from = n) -> catchers
# calculate called strike probability
catchers %>% mutate(strike.prob = S/(S+B)) -> catchers
# calculate called strike probability and odds
catchers %>% mutate(strike.prob = S/(S+B),
strike.odds = strike.prob/(1-strike.prob)) -> catchers
catchers
catchers %>%
ggplot(aes(x = strike.prob)) %>%
geom_dotplot()
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot()
catchers %>%
ggplot(aes(x = strike.odds)) +
geom_dotplot()
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot()
# filter catchers with less than min.pitches
catchers %>% filter(S + B >= min.pitches) -> catchers
min.pitches = 100
# filter catchers with less than min.pitches
catchers %>% filter(S + B >= min.pitches) -> catchers
# calculate called strike probability and odds
catchers %>% mutate(strike.prob = S/(S+B),
strike.odds = strike.prob/(1-strike.prob)) -> catchers
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot()
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot() +
ylim(0,1)
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot() +
xlim(0,1)
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot()
# rename fielder_2_1 to catcher
taken %>% rename(catcher = fielder_2_1) -> taken
# count balls and strikes by catcher
taken %>%
group_by(catcher) %>%
count(type) %>%
pivot_wider(id_cols = catcher, names_from = type, values_from = n) -> catchers
min.pitches = 100
# filter catchers with less than min.pitches
catchers %>% filter(S + B >= min.pitches) -> catchers
# calculate called strike probability and odds
catchers %>% mutate(strike.prob = S/(S+B)) -> catchers
catchers %>% head(5)
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot() +
labs(x = "strike probability",
title = "Distribution of called strike probabilities by catcher")
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot() +
labs(x = "strike probability",
title = "Distribution of called strike probabilities by catcher") +
theme(axis.text.y = element_blank())
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot() +
labs(x = "strike probability",
title = "Distribution of called strike probabilities by catcher") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
model.fixed <- glm(type == "S" ~ catcher,
family = "binomial",
data = taken)
summary(model.fixed)
model.fixed <- glm(type == "S" ~ as.factor(catcher),
family = "binomial",
data = taken)
summary(model.fixed)
library(lme4)
model.random <- glmer(type == "S" ~ catcher,
family = "binomial",
data = taken)
model.random <- glmer(type == "S" ~ (1|catcher),
family = "binomial",
data = taken)
summary(model.random)
model.random %>%
ranef()
model.random %>%
ranef() %>%
as.tibble() %>%
transmute(id = as.numeric(levels(grp)),
effect = condval)
model.random %>%
ranef() %>%
as.tibble() %>%
transmute(id = as.numeric(levels(grp)),
effect = condval) -> catcher_effects
catcher_effects %>% head(5)
catcher_effects %>%
ggplot(aes(x = effect)) +
geom_dotplot()
```{r, fig.height = 2}
model.random.adj <- glmer(type == "S" ~ s(px,pz) + (1|catcher),
family = "binomial",
data = taken)
library(mgcv)
#fit pitch location model
model.location <- gam(type == "S" ~ s(px, pz),
family = "binomial",
data = taken)
names(taken)
pitches$plate_x
pitches$plate_z
#fit pitch location model (plate_x = px, plate_z = pz)
model.location <- gam(type == "S" ~ s(plate_x, plate_z),
family = "binomial",
data = taken)
library(broom)
type = "response")
#get predictions from location model
taken %>%
mutate(strike_prob = predict(model.location, newdata = .,
type = "response"))
#get predictions from location model
taken %>%
mutate(strike_prob = predict(model.location, newdata = .,
type = "response")) -> taken
taken %>% select(strike_prob)
#fit random effects model adjusting for pitch location
model.random.adj <- glmer(type == "S" ~ strike_prob + (1|catcher),
family = "binomial",
data = taken)
summary(model.random.adj)
#get random effects
model.random.adj %>%
ranef() %>%
as.tibble() %>%
transmute(id = as.numeric(levels(grp)),
effect = condval) -> catcher_effects.adj
catcher_effects.adj %>% head(5)
catcher_effects.adj %>%
ggplot(aes(x = effect)) +
geom_dotplot()
#add catcher's name to the taken data.frame
master_id <- read_csv(file = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/masterid.csv")
head(master_id)
master_id$mlb_name
#merge with taken
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_2_1" = "mlb_id"))
#read in data
pitches <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-2")
#called strikes and balls only
pitches %>% filter(type %in% c("S","B")) -> taken
#add catcher's name to the taken data.frame
#get master ID list
master_id <- read_csv(file = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/masterid.csv")
#merge with taken
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_2_1" = "mlb_id")) -> taken
#called strikes and balls only
pitches %>% filter(type %in% c("S","B")) -> taken
#add catcher's name to the taken data.frame
#get master ID list
master_id <- read_csv(file = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/masterid.csv")
#merge with taken
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_2_1" = "mlb_id")) %>%
rename(catcher = fielder_2_1) -> taken
head(taken)
taken %>% select(catcher)
#called strikes and balls only
pitches %>% filter(type %in% c("S","B")) -> taken
#add catcher's name to the taken data.frame
#get master ID list
master_id <- read_csv(file = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/masterid.csv")
#merge with taken
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_2_1" = "mlb_id")) %>%
rename(catcher = mlb_id) -> taken
#called strikes and balls only
pitches %>% filter(type %in% c("S","B")) -> taken
#add catcher's name to the taken data.frame
#get master ID list
master_id <- read_csv(file = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/masterid.csv")
#merge with taken
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_2_1" = "mlb_id")) %>%
rename(catcher = mlb_name) -> taken
taken$catcher
library(ggrepel)
# count balls and strikes by catcher
taken %>%
group_by(catcher) %>%
count(type) %>%
pivot_wider(id_cols = catcher, names_from = type, values_from = n) -> catchers
min.pitches = 100
# filter catchers with less than min.pitches
catchers %>% filter(S + B >= min.pitches) -> catchers
# calculate called strike probability and odds
catchers %>% mutate(strike.prob = S/(S+B)) -> catchers
catchers %>% head(5)
arrange(desc(strike.prob)-> catchers
)
# calculate called strike probability and odds
catchers %>%
mutate(strike.prob = S/(S+B)) %>%
arrange(desc(strike.prob))-> catchers
catchers %>% head(5)
catchers %>% tail(5)
catchers %>%
ggplot(aes(x = strike.prob)) +
geom_dotplot() +
labs(x = "strike probability",
title = "Distribution of called strike probabilities by catcher") +
theme(axis.text.y = element_blank(),
axis.ticks.y = element_blank())
#add catcher's name to the taken data.frame
#get master ID list
path = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/"
file = "masterid.csv"
master_id <- read_csv(paste(path,file, sep = ""))
library(tidyverse)
master_id <- read_csv(paste(path,file, sep = ""))
#read in data
pitches <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-10")
# load baseballr package
library(baseballr)
#read in data
pitches <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-10")
#add catcher's name to the taken data.frame
#get master ID list
path = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/"
file = "masterid.csv"
master_id <- read_csv(paste(path,file, sep = ""))
#merge with taken, note catcher's ID is the fielder_2_1 variable
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_2_1" = "mlb_id")) %>%
rename(catcher = mlb_name) -> taken
#called strikes and balls only
pitches %>% filter(type %in% c("S","B")) -> taken
#add catcher's name to the taken data.frame
#get master ID list
path = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/"
file = "masterid.csv"
master_id <- read_csv(paste(path,file, sep = ""))
#merge with taken, note catcher's ID is the fielder_2_1 variable
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_2_1" = "mlb_id")) %>%
rename(catcher = mlb_name) -> taken
# count balls and strikes by catcher
taken %>%
group_by(catcher) %>%
count(type) %>%
pivot_wider(id_cols = catcher, names_from = type, values_from = n) -> catchers
min.pitches = 100
# filter catchers with less than min.pitches
catchers %>% filter(S + B >= min.pitches) -> catchers
min.pitches = 200
# filter catchers with less than min.pitches
catchers %>% filter(S + B >= min.pitches) -> catchers
min.pitches = 300
# filter catchers with less than min.pitches
catchers %>% filter(S + B >= min.pitches) -> catchers
exp(0.1966)/(1+exp(0.1966))
head(catcher)
head(catchers)
catchers %>% summarize(sum(S)/(sum(B) + sum(S)))
catchers %>% group_by() %>% summarize(sum(S)/(sum(B) + sum(S)))
exp(0.19667)/(1+exp(0.19667))
exp(0.19667 + 0.0615)/(1+exp(0.19667 + 0.0615))
taken %>%
group_by(catcher) %>%
count(type)
exp(0.0714)/(1 + exp(0.0714))
exp(0.19667 + 0.0714)/(1 + exp(0.19667 + 0.0714))
exp(0.19667)/(1 + exp(0.19667))
exp(0.19667)/(1 + exp(0.19667))
catchers %>%  head(5)
catchers %>% summarise(sum(S)/sum(B) + sum(S))
catchers %>% group_by() %>% summarise(sum(S)/(sum(B) + sum(S)))
exp(0.19667)/(1 + exp(0.19667))
exp(0.19667 + 0.0617)/(1 + exp(0.19667 + 0.0617))
library(tidyverse)
library(devtools)
# load baseballr package
library(baseballr)
#read in data
pitches <- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-10")
#called strikes and balls only
pitches %>% filter(type %in% c("S","B")) -> taken
#add catcher's name to the taken data.frame
#get master ID list
path = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/"
file = "masterid.csv"
master_id <- read_csv(paste(path,file, sep = ""))
#merge with taken, note catcher's ID is the fielder_2_1 variable
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("fielder_2_1" = "mlb_id")) %>%
rename(catcher = mlb_name) -> taken
library(mgcv)
library(broom)
#fit pitch location model (plate_x = px, plate_z = pz)
model.location <- gam(type == "S" ~ s(plate_x, plate_z),
family = "binomial",
data = taken)
#get predictions from location model
taken %>%
mutate(strike_prob = predict(model.location, newdata = .,
type = "response")) -> taken
#fit random effects model adjusting for pitch location
model.random.adj <- glmer(type == "S" ~ strike_prob + (1|catcher),
family = "binomial",
data = taken)
library(lme4)
#fit random effects model adjusting for pitch location
model.random.adj <- glmer(type == "S" ~ strike_prob + (1|catcher),
family = "binomial",
data = taken)
summary(model.random.adj)
# random effects
model.random.adj %>% tidy(effects = "ran_pers")
library(broom)
# random effects
model.random.adj %>% tidy(effects = "ran_pers")
# random effects
model.random.adj %>% tidy(effects = "ran_pars")
# fixed effects
model.random.adj %>% tidy(effects = "fixed")
#get random effects
model.random.adj %>%
ranef() %>%
as_tibble() %>%
transmute(id = levels(grp),
effect = condval) %>%
arrange(desc(effect)) -> catcher_effects.adj
catcher_effects.adj %>% head(5)
catcher_effects.adj %>% tail(5)
catcher_effects.adj %>%
ggplot(aes(x = effect)) +
geom_dotplot()
library(ggrepel)
catcher_effects.adj %>%
ggplot(aes(x = effect)) +
geom_dotplot() +
geom_text_repel(data = filter(catcher_effects.adj, abs(effect) > 0.3), aes(label = id))
catcher_effects.adj %>%
ggplot(aes(x = effect)) +
geom_dotplot() +
geom_text_repel(data = filter(catcher_effects.adj, abs(effect) > 0.3), aes(y = effect, label = id))
catcher_effects.adj %>%
ggplot(aes(x = effect)) +
geom_dotplot() +
geom_text_repel(data = filter(catcher_effects.adj, abs(effect) > 0.3), aes(x = effect, label = id))
catcher_effects.adj %>%
ggplot(aes(x = effect)) +
geom_dotplot() +
geom_text_repel(data = filter(catcher_effects.adj, abs(effect) > 0.3), aes(x = effect, y = 1, label = id))
catcher_effects.adj %>%
ggplot(aes(x = effect)) +
geom_dotplot() +
geom_text_repel(data = filter(catcher_effects.adj, abs(effect) > 0.3), aes(x = effect, y = 0.25, label = id))
catcher_effects.adj %>%
ggplot(aes(x = effect, label = id)) +
geom_dotplot() +
geom_text_repel(data = filter(catcher_effects.adj, abs(effect) > 0.3))
catcher_effects.adj %>%
ggplot(aes(x = effect, label = id)) +
geom_dotplot() +
geom_text_repel(data = filter(catcher_effects.adj, abs(effect) > 0.3), aes(y = effect))
catcher_effects.adj %>%
ggplot(aes(x = effect, label = id)) +
geom_dotplot()
taken$pitcher
#fit random effects model adjusting for pitch location and pitcher
model.random.adj2 <- glmer(type == "S" ~ strike_prob + (1|catcher) + (1|pitcher),
family = "binomial",
data = taken)
# random effects
model.random.adj2 %>% tidy(effects = "ran_pars")
# fixed effects
model.random.adj2 %>% tidy(effects = "fixed")
#get random effects
model.random.adj %>%
ranef() %>%
as_tibble() %>%
transmute(id = levels(grp),
effect = condval) %>%
arrange(desc(effect)) -> catcher_effects.adj
catcher_effects.adj %>% head(5)
catcher_effects.adj %>% tail(5)
catcher_effects.adj %>%
ggplot(aes(x = effect, label = id)) +
geom_dotplot()
# random effects
model.random.adj2 %>% tidy(effects = "ran_pars")
# fixed effects
model.random.adj2 %>% tidy(effects = "fixed")
#get random effects
model.random.adj2 %>%
ranef() %>%
as_tibble() %>%
transmute(id = levels(grp),
effect = condval) %>%
arrange(desc(effect)) -> catcher_effects.adj2
catcher_effects.adj2 %>% head(5)
catcher_effects.adj2 %>% tail(5)
#get random effects
model.random.adj2 %>%
ranef() %>%
as_tibble() %>%
filter(grpvar == "catcher") %>%
transmute(id = levels(grp),
effect = condval) %>%
arrange(desc(effect)) -> catcher_effects.adj2
model.random.adj2 %>%
ranef() %>%
as_tibble()
model.random.adj2 %>%
ranef() %>%
as_tibble() %>%
filter(grpvar == "catcher")
#get random effects
model.random.adj2 %>%
ranef() %>%
as_tibble() %>%
filter(grpvar == "catcher") %>%
transmute(id = grp,
effect = condval) %>%
arrange(desc(effect)) -> catcher_effects.adj2
catcher_effects.adj2 %>% head(5)
catcher_effects.adj2 %>% tail(5)
catcher_effects.adj2 %>%
ggplot(aes(x = effect, label = id)) +
geom_dotplot()
