rtools_path()
find_rtools()
has_rtools()
rtools_path()
fit <- brm(OB | trials(PA) ~ AgeD + I(AgeD ^ 2) +
(AgeD + I(AgeD ^ 2) | playerID),
data = players.stats,
family = binomial("logit"))
library(Lahman)
library(tidyverse)
library(brms)
library(rstan)
library(devtools)
source("Chapter8_functions.R")
find_rtools()
#players born in 1974 with at least 1000 at-bats
Master %>%
filter(birthYear == 1974) %>%
left_join(Batting, by = "playerID") %>%
group_by(playerID) %>%
summarize(AB = sum(AB)) %>%
filter(AB >= 1000) %>%
pull(playerID)-> players1974
players1974 %>%
map_df(get_stats) -> players.stats
players.stats %>%
mutate(AgeD = Age - 30) -> players.stats
fit <- brm(OB | trials(PA) ~ AgeD + I(AgeD ^ 2) +
(AgeD + I(AgeD ^ 2) | playerID),
data = players.stats,
family = binomial("logit"))
find_rtools()
fit <- brm(OB | trials(PA) ~ AgeD + I(AgeD ^ 2) +
(AgeD + I(AgeD ^ 2) | playerID),
data = players.stats,
family = binomial("logit"))
library(Lahman)
library(tidyverse)
library(brms)
library(rstan)
library(devtools)
source("Chapter8_functions.R")
find_rtools()
#players born in 1974 with at least 1000 at-bats
Master %>%
filter(birthYear == 1974) %>%
left_join(Batting, by = "playerID") %>%
group_by(playerID) %>%
summarize(AB = sum(AB)) %>%
filter(AB >= 1000) %>%
pull(playerID)-> players1974
players1974 %>%
map_df(get_stats) -> players.stats
players.stats %>%
mutate(AgeD = Age - 30) -> players.stats
fit <- brm(OB | trials(PA) ~ AgeD + I(AgeD ^ 2) +
(AgeD + I(AgeD ^ 2) | playerID),
data = players.stats,
family = binomial("logit"))
vignette("brms")
vignette(package = "brms")
vignette("brms_overview")
summary(fit)
vignette("brms_multilevel")
conditional_effects(fit)
marginal_effects(fit)
conditional_effects(fit)
names(fit)
vignette("brms_nonlinear")
plot(fit)
fit$data
fit %>% select(data)
head(fit$data)
head(fit$data2)
names(fut)
names(fit)
fit$ranef
players1974 %>%
map_df(get_stats)  %>%
mutate(AgeD = Age - 30) -> players.stats
players1974 %>%
map_df(get_stats)  %>%
mutate(AgeD = Age - 30) %>%
left_join(Master %>% select(playerID, nameLast, nameFirst),
by = "playerID") %>%
mutate(Player = paste(nameFirst, nameLast, sep = " ")) -> players.stats
fit <- brm(OB | trials(PA) ~ AgeD + I(AgeD ^ 2) +
(AgeD + I(AgeD ^ 2) | Player),
data = players.stats,
family = binomial("logit"))
coef(fit)
Player_Fits <- coef(fit)$Player[, "Estimate", ] %>%
as.data.frame()
Player_Fits
players.stats <- inner_join(players.stats, Player_Fits, by = "Player")
Player_Fits <- coef(fit)$Player[, "Estimate", ] %>%
as.tibble()
Player_Fits <- coef(fit)$Player[, "Estimate", ] %>%
as_tibble()
Player_Fits
coef(fit)$Player
coef(fit)$Player[, "Estimate", ]
Player_Fits <- coef(fit)$Player[, "Estimate", ] %>%
as_tibble(rownames = "Player")
Player_Fits
players.stats <- inner_join(players.stats, Player_Fits, by = "Player")
Player_Fits <- coef(fit)$Player[, "Estimate", ] %>%
as_tibble(rownames = "Player")
Player_Fits
Player_Fits <- coef(fit)$Player[, "Estimate", ] %>%
as_tibble(rownames = "Player") %>%
rename(Intercept = b0.hat,
AgeD = b1.hat,
IAgeDE2 = b2.hat)
Player_Fits <- coef(fit)$Player[, "Estimate", ] %>%
as_tibble(rownames = "Player") %>%
rename(b0.hat = Intercept,
b1.hat = AgeD,
b2.hat = IAgeDE2)
players1974 %>%
map_df(get_stats)  %>%
mutate(AgeD = Age - 30) %>%
left_join(Master %>% select(playerID, nameLast, nameFirst),
by = "playerID") %>%
mutate(Player = paste(nameFirst, nameLast, sep = " ")) -> player.stats
Player_Fits <- coef(fit)$Player[, "Estimate", ] %>%
as_tibble(rownames = "Player") %>%
rename(b0.hat = Intercept,
b1.hat = AgeD,
b2.hat = IAgeDE2)
player.stats <- inner_join(player.stats, Player_Fits, by = "Player")
player.stats
players1974 %>%
map_df(get_stats)  %>%
mutate(AgeD = Age - 30) %>%
left_join(Master %>% select(playerID, nameLast, nameFirst),
by = "playerID") %>%
mutate(Player = paste(nameFirst, nameLast, sep = " ")) %>%
select(-nameLast,-nameFirst) -> player.stats
player.stats <- inner_join(player.stats, Player_Fits, by = "Player")
View(player.stats)
mutate(OBP.pred = plogis(b0.hat + b1.hat * AgeD + b2.hat * AgeD^2) -> player.stats
)
# find estimates of OBP probs at each age
# note plogis is the logit function
player.stats %>%
mutate(OBP.pred = plogis(b0.hat + b1.hat * AgeD + b2.hat * AgeD^2)) -> player.stats
player.stats
player.stats %>%
ggplot(aes(x = Age + 30,
y = OBP.pred,
group = Player)) +
geom_line()
7293.58 + 3281.39
12*(254.39 + 3489.00 + 57.00)
450*22
library(tidyverse)
survey <- read_csv(file = "/Users/kfcummiskey/Downloads/MA388 Sabermetrics Survey(1-31) (1).csv")
View(survey)
survey %>%
separate(Name, into("First", "Last"), sep = " ") -> survey
survey %>%
separate(Name, into = c("First", "Last"), sep = " ") -> survey
cadets <- read_csv(file = "/Users/kfcummiskey/Downloads/MA388 Roster.csv")
cadets %>%
anti_join(survey, by = "Last")
View(cadets)
cadets %>%
mutate(Last = str_to_title(Last))
cadets %>%
mutate(Last = str_to_title(Last)) %>%
anti_join(survey, by = "Last")
cadets %>%
mutate(Last = str_to_title(Last)) %>%
anti_join(survey, by = "Last") %>%
pull(Last)
Batting %>%
filter(yearID == 2009) %>%
arrange(desc(HR))
library(Lahman)
Batting %>%
filter(yearID == 2009) %>%
arrange(desc(HR)) %>%
head(5)
Batting %>%
+ filter(yearID == 2009) %>%
+ arrange(desc(HR)) %>%
+ head(5)
Batting %>%
filter(yearID == 2009) %>%
arrange(desc(HR)) %>%
head(5)
Batting %>%
filter(yearID == 2010) %>%
arrange(desc(HR)) %>%
head(5)
Batting %>%
filter(yearID == 2005) %>%
arrange(desc(HR)) %>%
head(5)
library(tidyverse)
library(tidyverse)
library(Lahman)
#find Big Papi's playerID
Master %>%
filter(nameLast == "Ortiz", nameFirst == "David")
#find Big Papi's playerID
Master %>%
filter(nameLast == "Ortiz", nameFirst == "David") %>%
pull(playerID) -> ortiz.id
Batting %>%
filter(playedID == ortiz.id)
Batting %>%
filter(playerID == ortiz.id)
#use get_stats function (pg 180)
source("Chapter8_functions.R")
Ortiz <- get_stats(ortiz.id)
Ortiz
Batting %>%
filter(playerID == ortiz.id)
Ortiz %>%
ggplot(aes(x = Age, y = SLG)) +
geom_point() +
labs(title = "David Ortiz")
Ortiz %>%
ggplot(aes(x = Age, y = AVG)) +
geom_point() +
labs(title = "David Ortiz")
Ortiz %>%
ggplot(aes(x = Age, y = SLG)) +
geom_point() +
labs(title = "David Ortiz")
#function to return players Age, SLG, OBP, OPS
get_stats <- function(player.id){
require(Lahman)
Batting %>%
filter(playerID == player.id) %>%
inner_join(Master, by = "playerID") %>%
mutate(birthyear = ifelse(birthMonth >= 7,
birthYear + 1, birthYear),
Age = yearID - birthyear,
SLG = (H - X2B - X3B - HR +
2 * X2B + 3*X3B + 4 * HR)/AB,
OBP = (H + BB + HBP)/(AB + BB+ HBP + SF),
OPS = SLG + OBP,
AVG = H/AB,
HR.rate = HR/AB,
OB = (H + BB + HBP),
PA = (AB + BB + HBP + SF)) %>%
select(playerID, Age, yearID, SLG, OBP, OPS, AVG, HR.rate, OB, PA)
}
Ortiz <- get_stats(ortiz.id)
Ortiz
Batting %>%
group_by(playerID) %>%
summarize_at(vars, sum, na.rm = TRUE)
vars = c("H","AB")
Batting %>%
group_by(playerID) %>%
summarize_at(vars, sum, na.rm = TRUE) %>%
summarize(Career.AB = sum(AB, na.rm = TRUE)) %>%
filter(Career.AB >= 3200)
Batting %>%
group_by(playerID) %>%
summarize_at(vars, sum, na.rm = TRUE)
Batting %>%
group_by(playerID) %>%
summarize_at(vars, sum, na.rm = TRUE) %>%
filter(Career.AB >= 3200)
Batting %>%
group_by(playerID) %>%
summarize_at(vars, sum, na.rm = TRUE)
Batting %>%
group_by(playerID) %>%
summarize_at(vars, sum, na.rm = TRUE) %>%
filter(AB >= 3200)
model.ortiz <- fit_model(Ortiz)
model.ortiz
plot_trajectories(ortiz.id, n.similar = 1, ncol = 1)
plot_trajectories(ortiz.id, n.similar = 0, ncol = 1)
Ortiz %>%
ggplot(aes(x = Age, y = SLG)) +
geom_point() +
labs(title = "David Ortiz") +
geom_smooth(method = "lm",
model = y ~ x + I(x^2))
Ortiz %>%
ggplot(aes(x = Age, y = SLG)) +
geom_point() +
labs(title = "David Ortiz") +
geom_smooth(method = "lm",
formula = y ~ x + I(x^2))
library(Lahman)
library(tidyverse)
#find Arod :( player ID
Master %>%
filter(nameLast == "Rodriquez", nameFirst == "Alex")
#find Arod :( player ID
Master %>%
filter(nameLast == "Rodriguez", nameFirst == "Alex")
#find Arod :( player ID
Master %>%
filter(nameLast == "Rodriguez", nameFirst == "Alex") %>%
pull(playerID)
#find Arod :( player ID
Master %>%
filter(nameLast == "Rodriguez", nameFirst == "Alex") %>%
pull(playerID) -> arod.id
Batting %>%
filter(playerID == arod.id)
#this function is in Chapter8_functions.R
source("Chapter8_functions.R")
get_stats
get_stats(ortiz.id) -> Ortiz
get_stats(arod.id) -> ARod
View(ARod)
Arod %>%
ggplot(aes(x = Age, y = OPS)) +
geom_point() +
labs("ARod :(")
ARod %>%
ggplot(aes(x = Age, y = OPS)) +
geom_point() +
labs("ARod :(")
dev.off()
library(tidyverse)
library(Lahman)
#find Big Papi's playerID
Master %>%
filter(nameLast == "Ortiz", nameFirst == "David")
#find Big Papi's playerID
Master %>%
filter(nameLast == "Ortiz", nameFirst == "David") -> ortiz.id
Batting %>%
filter(playerID == ortiz.id)
#find Big Papi's playerID
Master %>%
filter(nameLast == "Ortiz", nameFirst == "David") %>%
pull(playerID)-> ortiz.id
Batting %>%
filter(playerID == ortiz.id)
#get Ortiz's stats by age using get_stats
source("Chapter8_functions.R")
Ortiz.stats <- get_stats(ortiz.id)
Ortiz.stats
#plot his OPS by age
Ortiz.stats %>%
ggplot(aes(x = Age, y = OPS)) +
geom_point() +
labs(title = "Ortiz OPS")
library(ggplot2)
library(dplyr)
library(Lahman)
library(tidyverse)
library(broom)
library(baseballr)
library(lme4)
library(mgcv)
pitches1 <- scrape_statcast_savant_batter_all(start_date = "2017-06-01",
end_date = "2017-06-10")
pitches2 <- scrape_statcast_savant_batter_all(start_date = "2017-06-11",
end_date = "2017-06-20")
pitches3 <- scrape_statcast_savant_batter_all(start_date = "2017-06-21",
end_date = "2017-06-30")
pitches = rbind(pitches1,pitches2,pitches3)
pitches %>% filter(type != "X") -> taken
path = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/"
file = "masterid.csv"
master_id <- read_csv(paste(path,file, sep = ""))
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("pitcher" = "mlb_id")) %>%
rename(pitcher_name = mlb_name) -> taken
taken%>%
group_by(pitcher_name)%>%
add_tally()%>%
filter(n>400)-> taken
strike_mod <- gam(type=="S" ~ s(plate_x,plate_z),
family = binomial, data = taken)
new_taken=taken%>%
filter(type != "X")%>%
sample_n(400)%>%
mutate(strike_prob= predict(strike_mod, newdata=., type = "response"))
taken
taken %>%
filter(type != "X") -> taken
strike_mod <- gam(type=="S" ~ s(plate_x,plate_z),
family = binomial, data = taken)
taken%>%
filter(type != "X")%>%
mutate(strike_prob= predict(strike_mod, newdata=., type = "response")) -> taken
pitches %>% filter(type != "X") -> taken
path = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/"
file = "masterid.csv"
master_id <- read_csv(paste(path,file, sep = ""))
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("pitcher" = "mlb_id")) %>%
rename(pitcher_name = mlb_name) -> taken
taken%>%
group_by(pitcher_name)%>%
add_tally()%>%
filter(n>400)-> taken
strike_mod <- gam(type=="S" ~ s(plate_x,plate_z),
family = binomial, data = taken)
taken%>%
mutate(strike_prob= predict(strike_mod, newdata=., type = "response")) -> taken
pitches %>% filter(type != "X") -> taken
path = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/"
file = "masterid.csv"
master_id <- read_csv(paste(path,file, sep = ""))
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("pitcher" = "mlb_id")) %>%
rename(pitcher_name = mlb_name) -> taken
taken%>%
group_by(pitcher_name)%>%
add_tally()%>%
filter(n>400)-> taken
pitches %>% filter(type != "X") -> taken
path = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/"
file = "masterid.csv"
master_id <- read_csv(paste(path,file, sep = ""))
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("pitcher" = "mlb_id")) %>%
rename(pitcher_name = mlb_name) -> taken
taken%>%
group_by(pitcher_name)%>%
add_tally()%>%
filter(n>400)-> taken
strike_mod <- gam(type=="S" ~ s(plate_x,plate_z),
family = binomial, data = taken)
taken%>%
mutate(strike_prob= predict(strike_mod, newdata= ., type = "response")) -> taken
pitches1 <- scrape_statcast_savant_batter_all(start_date = "2017-06-01",
end_date = "2017-06-10")
pitches2 <- scrape_statcast_savant_batter_all(start_date = "2017-06-11",
end_date = "2017-06-20")
pitches3 <- scrape_statcast_savant_batter_all(start_date = "2017-06-21",
end_date = "2017-06-30")
pitches = rbind(pitches1,pitches2,pitches3)
pitches %>% filter(type != "X") -> taken
path = "https://raw.githubusercontent.com/beanumber/baseball_R/master/data/"
file = "masterid.csv"
master_id <- read_csv(paste(path,file, sep = ""))
taken %>%
left_join(select(master_id,mlb_id,mlb_name),
by = c("pitcher" = "mlb_id")) %>%
rename(pitcher_name = mlb_name) -> taken
taken%>%
group_by(pitcher_name)%>%
add_tally()%>%
filter(n>400)-> taken
strike_mod <- gam(type=="S" ~ s(plate_x,plate_z),
family = binomial, data = taken)
taken%>%
group_by() %>%
mutate(strike_prob= predict(strike_mod, newdata= ., type = "response")) -> taken
mod_a <- glmer(type != "X" ~ strike_prob + (1|pitcher_name),data = taken,family = binomial)
mod_a <- glmer(type == "S" ~ strike_prob + (1|pitcher_name),data = taken,family = binomial)
summary(mod_a)
3000/74
x = seq(-5,5,0.1)
plot(x, 5 + 4*x - 5*x^2 )
plot(x, 5 + 4*x - 0.55*x^2 )
plot(x, 5 + 0.5*x - 0.55*x^2 )
plot(x, 2 + 0.5*x - 0.55*x^2 )
library(Lahman)
library(tidyverse)
#find Arod :( player ID
Master %>%
filter(nameLast == "Rodriguez", nameFirst == "Alex") %>%
pull(playerID) -> arod.id
Batting %>%
filter(playerID == arod.id)
#this function is in Chapter8_functions.R
source("Chapter8_functions.R")
get_stats(arod.id) -> ARod
ARod %>%
ggplot(aes(x = Age, y = OPS)) +
geom_point() +
labs("ARod OPS")
ARod %>%
ggplot(aes(x = Age, y = OPS)) +
geom_point() +
labs("ARod OPS")
ARod %>%
ggplot(aes(x = Age, y = OPS)) +
geom_point() +
labs("ARod OPS") +
geom_smooth(method = "lm",
formula = x + I(x^2),
se = FALSE)
ARod %>%
ggplot(aes(x = Age, y = OPS)) +
geom_point() +
labs("ARod OPS") +
geom_smooth(method = "lm",
formula = y ~ x + I(x^2),
se = FALSE)
fit_model(Arod)
fit_model(ARod)
fit_model(ARod) %>% pluck(fit)
fit_model(ARod) %>% pluck("fit")
Master %>%
filter(nameLast == "Ortiz", nameFirst == "David") %>%
pull(playerID)
player.ids <- c(arod.id, "ortizda01")
player.ids %>%
split(.) %>%
map(get_stats) -> player.stats
