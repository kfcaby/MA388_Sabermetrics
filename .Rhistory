summarize(W = sum(W, na.rm = TRUE),
L = sum(L, na.rm = TRUE),
SO = sum(SO, na.rm = TRUE),
BB = sum(BB, na.rm = TRUE)) %>%
filter(W > 349) -> Wins.350
Wins.350 %>%
left_join(Master %>% select(playerID, nameFirst, nameLast),
by = "playerID") %>%
mutate(player = paste(nameFirst,nameLast)) %>%
select(player, W, L, SO, BB) -> Wins.350
Wins.350
Pitching %>%
group_by(playerID) %>%
summarize(W = sum(W, na.rm = TRUE),
L = sum(L, na.rm = TRUE),
SO = sum(SO, na.rm = TRUE),
BB = sum(BB, na.rm = TRUE)) %>%
filter(W > 349) %>%
arrange(desc(W))-> Wins.350
Wins.350 %>%
left_join(Master %>% select(playerID, nameFirst, nameLast),
by = "playerID") %>%
mutate(player = paste(nameFirst,nameLast)) %>%
select(player, W, L, SO, BB) -> Wins.350
Wins.350
Master %>% filter(nameLast == "Henderson")
Pitching %>%
group_by(playerID) %>%
summarize(W = sum(W, na.rm = TRUE),
L = sum(L, na.rm = TRUE),
SO = sum(SO, na.rm = TRUE),
BB = sum(BB, na.rm = TRUE)) %>%
filter(W > 349) -> Wins.350
Wins.350
Pitching %>%
group_by(playerID) %>%
summarize(total.Wins = sum(W, na.rm = TRUE),
total.Losses = sum(L, na.rm = TRUE),
SO = sum(SO, na.rm = TRUE),
BB = sum(BB, na.rm = TRUE)) %>%
filter(W > 349) -> Wins.350
Pitching %>%
group_by(playerID) %>%
summarize(total.Wins = sum(W, na.rm = TRUE),
total.Losses = sum(L, na.rm = TRUE),
SO = sum(SO, na.rm = TRUE),
BB = sum(BB, na.rm = TRUE)) %>%
filter(total.Wins > 349) -> Wins.350
Wins.350
Wins.350
Pitching %>%
group_by(playerID) %>%
summarize(W = sum(W, na.rm = TRUE),
L = sum(L, na.rm = TRUE),
SO = sum(SO, na.rm = TRUE),
BB = sum(BB, na.rm = TRUE)) %>%
filter(W > 349) -> Wins.350
Wins.350
Master %>% select(playerID, nameFirst, nameLast)
Wins.350 %>%
left_join(Master %>% select(playerID, nameFirst, nameLast),
by = "playerID")
Wins.350 %>%
left_join(Master %>% select(playerID, nameFirst, nameLast),
by = "playerID") %>%
mutate(player = paste(nameFirst,nameLast))
Wins.350 %>%
left_join(Master %>% select(playerID, nameFirst, nameLast),
by = "playerID") %>%
mutate(player = paste(nameFirst,nameLast)) %>%
select(player, W, L, SO, BB)
Teams %>% filter(yearID == 2018)
library(Lahman)
head(Teams)
hofpitching = read_csv(file = "https://raw.githubusercontent.com/maxtoki/baseball_R/master/data/hofpitching.csv")
library(tidyverse)
hofpitching = read_csv(file = "https://raw.githubusercontent.com/maxtoki/baseball_R/master/data/hofpitching.csv")
library(Lahman)
# number of wins by season per team
Teams %>%
ggplot(aes(x = W)) +
geom_boxplot()
# number of wins by season per team
Teams %>%
ggplot(aes(y = W)) +
geom_boxplot()
# number of wins by season per team
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(y = W)) +
geom_boxplot()
# number of wins by season per team
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = lgID, y = W)) +
geom_boxplot()
# let's look at Homeruns vs Wins
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR, y = W)) +
geom_point()
# let's look at Homeruns vs Wins
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR, y = W, color = lgID)) +
geom_point()
# let's look at Homeruns vs Wins
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR, y = W, color = lgID)) +
geom_point() +
geom_smooth(se = "FALSE")
# let's look at Homeruns vs Wins
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR, y = W, color = lgID)) +
geom_point() +
geom_smooth()
# let's look at Homeruns vs Wins
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR, y = W, color = lgID)) +
geom_point() +
geom_smooth(method = "lm")
# let's look at Homeruns vs Wins
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR,
y = W,
color = lgID,
size = ERA)) +
geom_point() +
```
names(Teams)
# let's look at Homeruns vs Wins
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR,
y = W,
color = lgID,
size = ERA)) +
geom_point()
# let's look at Homeruns vs Wins
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR,
y = W,
color = lgID)) +
geom_point() +
labs(x = "Home Runs",
y = "Wins",
title "Wins versus Home Runs by league")
# let's look at Homeruns vs Wins
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR,
y = W,
color = lgID)) +
geom_point() +
labs(x = "Home Runs",
y = "Wins",
title = "Wins versus Home Runs by league")
#Answer to fraction of complete games
complete.games = Teams %>%
filter(yearID > 1969) %>%
group_by(yearID) %>%
summarize(CG.frac = sum(CG)/sum(G))
complete.games %>%
ggplot(aes(x = yearID, y = CG.frac)) +
geom_point() +
labs(x = "Year", y = "Fraction complete games",
title = "Fraction of complete games by year")
#Answer to fraction of complete games
complete.games = Teams %>%
filter(yearID > 1969) %>%
group_by(yearID, lgID) %>%
summarize(CG.frac = sum(CG)/sum(G))
complete.games %>%
ggplot(aes(x = yearID, y = CG.frac, color = lgID)) +
geom_point() +
labs(x = "Year", y = "Fraction complete games",
title = "Fraction of complete games by year")
dev.off()
hofpitching <- read_csv(file = "https://raw.githubusercontent.com/maxtoki/baseball_R/master/data/hofpitching.csv")
View(hofpitching)
#Number of wins in a season
Teams %>%
ggplot(aes(x = W)) +
geom_boxplot()
#Number of wins in a season
Teams %>%
ggplot(aes(y = W)) +
geom_boxplot()
#Number of wins in a season (2018)
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(y = W)) +
geom_boxplot()
#Number of wins in a season (2018)
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = lgID, y = W)) +
geom_boxplot()
#Number of wins in a season (2018)
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = lgID, y = W)) +
geom_boxplot() +
labs(x = "league", y = "Wins",
title = "Number of wins by team (2018)")
#Number of wins vs homeruns
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR, y = W)) +
geom_point() +
labs(x = "Homeruns", y = "Wins",
title = "Home Run vs Wins (2018)")
#Number of wins vs homeruns
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR, y = W, color = lgID)) +
geom_point() +
labs(x = "Homeruns", y = "Wins",
title = "Home Run vs Wins (2018)")
#Number of wins vs homeruns
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR,
y = W,
color = lgID,
size = ERA)) +
geom_point() +
labs(x = "Homeruns", y = "Wins",
title = "Home Run vs Wins (2018)")
#Number of wins vs homeruns
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR,
y = W,
color = lgID)) +
geom_point() +
labs(x = "Homeruns", y = "Wins",
title = "Home Run vs Wins (2018)")
#Number of wins vs homeruns
Teams %>%
filter(yearID == 2018) %>%
ggplot(aes(x = HR,
y = W,
color = lgID)) +
geom_point() +
labs(x = "Homeruns", y = "Wins",
title = "Home Run vs Wins (2018)") +
geom_smooth(method = "lm")
complete.games = Teams %>%
filter(yearID > 1969) %>%
group_by(yearID) %>%
summarize(CG.frac = sum(CG)/sum(G))
View(complete.games)
complete.games %>%
ggplot(aes(x = yearID, y = CG.frac)) +
geom_point() +
labs(x = "years", y = "complete games(fraction)",
title = "Fraction of complete games (1970-2018)")
complete.games %>%
ggplot(aes(x = yearID, y = CG.frac, color = lgID)) +
geom_point() +
labs(x = "years", y = "complete games(fraction)",
title = "Fraction of complete games (1970-2018)")
complete.games = Teams %>%
filter(yearID > 1969) %>%
group_by(yearID, lgID) %>%
summarize(CG.frac = sum(CG)/sum(G))
complete.games %>%
ggplot(aes(x = yearID, y = CG.frac, color = lgID)) +
geom_point() +
labs(x = "years", y = "complete games(fraction)",
title = "Fraction of complete games (1970-2018)")
library(tidyverse)
houses = read_csv(file = "redfin_2018-11-02-05-18-50.csv")
houses %>%
ggplot(aes(x = `SQUARE FEET`, y = PRICE)) +
geom_point()
houses %>%
filter(PRICE < 600000) %>%
ggplot(aes(x = `SQUARE FEET`, y = PRICE)) +
geom_point()
houses %>%
filter(PRICE < 600000) %>%
ggplot(aes(x = `SQUARE FEET`, y = PRICE)) +
geom_point() + geom_smooth()
houses %>%
filter(PRICE < 600000) %>%
ggplot(aes(x = `SQUARE FEET`, y = PRICE)) +
geom_point() + geom_smooth(method = "lm")
houses %>%
filter(PRICE < 600000, PRICE > 200000) %>%
ggplot(aes(x = `SQUARE FEET`, y = PRICE)) +
geom_point() + geom_smooth(method = "lm")
houses %>%
filter(PRICE < 600000, PRICE > 200000) %>%
ggplot(aes(x = `SQUARE FEET`, y = PRICE,
size = 2019 - `YEAR BUILT`)) +
geom_point() + geom_smooth(method = "lm")
1-pnorm(2,0,1)
library(Lahman)
Pitching
Pitching %>% filter(yearID > 1990)
library(tidyverse)
Pitching %>% filter(yearID > 1990)
Pitching %>% filter(yearID > 1990) %>%
ggplot(aes(x = GS)) + geom_histogram()
Pitching %>% filter(yearID > 1990, GS > 19) %>%
ggplot(aes(x = GS)) + geom_histogram()
Pitching %>% filter(yearID > 1990, GS > 19)
Pitching %>% head(1) %>% head(5)
return(d)
#this function finds the top n.starters in games started in a
#data frame of pitchers with at least GS.min starts
# Arguments
# d - data frame containing pitchers
# GS.min - minimum number of start
# n.starters - the number of starters to return
get_starting_pitchers <- function(d,n.starters,GS.min){
d = d %>%
filter(GS >= GS.min) %>%
arrange(desc(GS)) %>%
head(n.starters)
return(d)
}
Pitching %>%
filter(yearID >= 1970) %>%
split(teamID,yearID) %>%
map_df(get_starting_pitchers,
n.starters = 5,
GS.min = 20)
Pitching %>%
filter(yearID >= 1970) %>%
split(pull(.,teamID)) %>%
map_df(get_starting_pitchers,
n.starters = 5,
GS.min = 20)
Pitching %>%
filter(yearID >= 1970) %>%
split(list(pull(.,yearID),pull(.,teamID))) %>%
map_df(get_starting_pitchers,
n.starters = 5,
GS.min = 20)
Pitching %>%
filter(yearID >= 1970) %>%
split(list(pull(.,yearID),
pull(.,teamID)),
drop = TRUE) %>%
map_df(get_starting_pitchers,
n.starters = 5,
GS.min = 20)
source('~/.active-rstudio-document', echo=TRUE)
top.starters = Pitching %>%
filter(yearID >= 1970) %>%
split(list(pull(.,yearID),
pull(.,teamID)),
drop = TRUE) %>%
map_df(get_starting_pitchers,
n.starters = 5,
GS.min = 20)
names(Pitching)
top.starters %>%
filter(yearID == 2018) %>%
ggplot(aes(x = IPout/GS)) +
geom_histogram()
top.starters %>%
filter(yearID == 2018) %>%
ggplot(aes(x = IPouts/GS)) +
geom_histogram()
top.starters %>%
filter(IPouts/GS < 10)
top.starters = Pitching %>%
filter(yearID >= 1970) %>%
split(list(pull(.,yearID),
pull(.,teamID)),
drop = TRUE) %>%
map_df(get_starting_pitchers,
n.starters = 5,
GS.min = 30)
top.starters %>%
filter(yearID == 2018) %>%
ggplot(aes(x = IPouts/GS)) +
geom_histogram()
top.starters %>%
filter(yearID == 2018) %>%
ggplot(aes(x = IPouts/G)) +
geom_histogram()
top.starters %>%
filter(yearID == 2018) %>%
ggplot(aes(y = IPouts/GS), x = teamID) +
geom_boxplot()
top.starters %>%
filter(yearID == 2018) %>%
ggplot(aes(y = IPouts/GS, x = teamID)) +
geom_boxplot()
top.starters %>%
filter(yearID == 2018, lgID = "AA") %>%
ggplot(aes(y = IPouts/GS, x = teamID)) +
geom_boxplot()
head(Pitching)
top.starters %>%
filter(yearID == 2018, lgID == "AA") %>%
ggplot(aes(y = IPouts/GS, x = teamID)) +
geom_boxplot()
unique(Pitching$lg)
top.starters %>%
filter(yearID == 2018, lgID == "AL") %>%
ggplot(aes(y = IPouts/GS, x = teamID)) +
geom_boxplot()
top.starters %>%
ggplot(aes(x = yearID, y = IPouts/GS)) +
geom_line()
top.starters %>%
filter(lgID == "AA") %>%
ggplot(aes(x = yearID, y = IPouts/GS,
color = teamID)) +
geom_line()
top.starters %>%
filter(lgID == "AL") %>%
ggplot(aes(x = yearID, y = IPouts/GS,
color = teamID)) +
geom_line()
top.pitchers %>%
filter(yearID == 2018, lgID == "AL") %>%
ggplot(aes(x = IPouts/GS), y = ERA) %>%
geom_point()
top.starterss %>%
filter(yearID == 2018, lgID == "AL") %>%
ggplot(aes(x = IPouts/GS), y = ERA) %>%
geom_point()
top.starters %>%
filter(yearID == 2018, lgID == "AL") %>%
ggplot(aes(x = IPouts/GS), y = ERA) %>%
geom_point()
top.starters %>%
filter(yearID == 2018, lgID == "AL") %>%
ggplot(aes(x = IPouts/GS), y = ERA) +
geom_point()
ggplot(aes(x = IPouts/GS, y = ERA) +
top.starters %>%
top.starters %>%
top.starters %>%
filter(yearID == 2018, lgID == "AL") %>%
ggplot(aes(x = IPouts/GS, y = ERA)) +
geom_point()
top.starters = Pitching %>%
filter(yearID >= 1970) %>%
split(list(pull(.,yearID),
pull(.,teamID)),
drop = TRUE) %>%
map_df(get_starting_pitchers,
n.starters = 5,
GS.min = 25)
top.starters %>%
filter(yearID == 2018) %>%
ggplot(aes(x = IPouts/GS)) +
geom_histogram()
top.starters = top.starters %>%
filter(IPouts/GS > 10)
top.starters %>%
filter(yearID == 2018) %>%
ggplot(aes(x = IPouts/GS)) +
geom_histogram()
top.starters %>%
filter(yearID == 2018, lgID == "AL") %>%
ggplot(aes(y = IPouts/GS, x = teamID)) +
geom_boxplot()
top.starters %>%
filter(yearID == 2018, lgID == "AL") %>%
ggplot(aes(x = IPouts/GS, y = ERA)) +
geom_point()
top.starters %>%
filter(lgID == "AL") %>%
ggplot(aes(x = yearID, y = IPouts/GS)) +
geom_line()
top.starters %>%
filter(lgID == "AL") %>%
group_by(yearID, teamID) %>%
summarize(innings.per.start = IPout/GS) %>%
ggplot(aes(x = yearID, y = innings.per.start)) +
geom_line()
top.starters %>%
filter(lgID == "AL") %>%
group_by(yearID, teamID) %>%
summarize(innings.per.start = IPouts/GS) %>%
ggplot(aes(x = yearID, y = innings.per.start)) +
geom_line()
top.starters %>%
filter(lgID == "AL") %>%
group_by(yearID, teamID) %>%
summarize(innings.per.start = sum(IPouts)/sum(GS)) %>%
ggplot(aes(x = yearID, y = innings.per.start)) +
geom_line()
top.starters %>%
filter(lgID == "AL") %>%
group_by(yearID, teamID) %>%
summarize(innings.per.start = sum(IPouts)/sum(GS)) %>%
ggplot(aes(x = yearID, y = innings.per.start,
color = teamID)) +
geom_line()
top.starters %>%
filter(teamID %in% c("BOS", "NYA", "TBA", "TOR", "BAL")) %>%
group_by(yearID, teamID) %>%
summarize(innings.per.start = sum(IPouts)/sum(GS)) %>%
ggplot(aes(x = yearID, y = innings.per.start,
color = teamID)) +
geom_line()
source('~/.active-rstudio-document', echo=TRUE)
