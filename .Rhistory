ev_plot <- batted2017 %>%
sample_n(nrow(.)/2) %>%
ggplot(aes(x = launch_speed,
y = launch_angle,
color = hit_flag)) +
geom_point() +
scale_color_viridis(discrete = TRUE) +
geom_hline(data = guidelines,
aes(yintercept = launch_angle),
color = "black",
linetype = 2) +
geom_text(data = guidelines,
aes(label = label, x = 0, y = launch_angle - 4),
color = "black", hjust = "left")
ev_plot
ev_plot2 <- batted2017 %>%
sample_n(nrow(.)/2) %>%
ggplot(aes(x = launch_speed,
y = launch_angle,
color = hit.prob)) +
geom_point() +
scale_color_viridis() +
geom_hline(data = guidelines,
aes(yintercept = launch_angle),
color = "black",
linetype = 2) +
geom_text(data = guidelines,
aes(label = label, x = 0, y = launch_angle - 4),
color = "black", hjust = "left")
ev_plot2
```{r, eval = FALSE}
as_date(17256)
ev_plot <- batted2017 %>%
sample_n(nrow(.)/2) %>%
ggplot(aes(x = launch_speed,
y = launch_angle,
color = hit_flag)) +
geom_point() +
scale_color_viridis(discrete = TRUE) +
geom_hline(data = guidelines,
aes(yintercept = launch_angle),
color = "black",
linetype = 2) +
geom_text(data = guidelines,
aes(label = label, x = 0, y = launch_angle - 4),
color = "black", hjust = "left")
ev_plot
batted2017 %>%
ggplot(aes(x = launch_speed,
color = hit_flag)) +
geom_histogram() +
scale_color_viridis(discrete = TRUE)
batted2017 %>%
ggplot(aes(x = launch_speed,
color = hit_flag)) +
geom_freqpoly() +
scale_color_viridis(discrete = TRUE)
batted2017 %>%
ggplot(aes(x = launch_speed,
color = hit_flag)) +
geom_freqpoly(stat = "density") +
scale_color_viridis(discrete = TRUE)
batted100mph <- tibble(launch_angle = seq(-30,60),
launch_speed = 100) %>%
mutate(predict(fit, type = "response",
newdata = .))
batted100mph <- tibble(launch_angle = seq(-30,60),
launch_speed = 100) %>%
mutate(hit.prob = predict(fit, type = "response",
newdata = .))
batted100mph %>%
ggplot(aes(x = launch_angle,
y = hit.prob)) +
geom_line()
batted2017 %>%
filter(hit_flag == 0) %>%
arrange(-hit.prob) %>%
head(1)
batted2017 %>%
filter(hit_flag == 0) %>%
arrange(-hit.prob) %>%
head(1) %>%
select(player_name, launch_angle, launch_speed)
View(batted2017)
batted2017 %>%
filter(hit_flag == 0) %>%
arrange(-hit.prob) %>%
head(1) %>%
select(player_name, launch_angle, launch_speed, events)
batted2017 %>%
filter(hit_flag == 0) %>%
arrange(-hit.prob) %>%
head(1) %>%
select(player_name, launch_angle, launch_speed, events, hit.prob)
batted2017 %>%
filter(hit_flag == 0) %>%
arrange(-hit.prob) %>%
head(1) %>%
select(player_name, launch_angle, launch_speed, events, hit.prob, home_team)
#March 31, 2017 to April 13, 2017
scrape_statcast_savant(start_date = as_date(17256), end_date = as_date(17270))
View(grades)
top10_batter <- batted2017 %>%
group_by(batter) %>%
summarize(avg_ev = mean(launch_speed))%>%
arrange(desc(avg_ev)) %>%
head(10)
top10_batter
guidelines <- tibble(
launch_angle =c(10,25,50),
launch_speed =40,
label = c("GB","LD","FB")
)
#getting all ABs for top 10 batters
topbatters_all <- batted2017 %>%
filter(batter %in% top10_batter$batter)
ev_plot_batters <- topbatters_all %>%
sample_n(nrow(.)/2) %>%
ggplot(aes(launch_speed,y=launch_angle,
color=estimated_ba_using_speedangle)) +
geom_hline(data = guidelines, aes(yintercept=launch_angle),
color="black",linetype=2)+
geom_text(data=guidelines,
aes(label = label, y=launch_angle -4),
color = "black", hjust = "left")+
geom_point(alpha = 0.05)+
scale_color_gradient("BA", low ="#32527B",high = "white")+
scale_x_continuous("EV (mph)",limits = c(40,120))+
scale_y_continuous("Launch Angle (degrees)",
breaks = seq(-75,75,25))+
facet_wrap(~batter)
ev_plot_batters
ev_plot_batters <- topbatters_all %>%
sample_n(nrow(.)/2) %>%
ggplot(aes(launch_speed,y=launch_angle,
color=estimated_ba_using_speedangle)) +
geom_hline(data = guidelines, aes(yintercept=launch_angle),
color="black",linetype=2)+
geom_text(data=guidelines,
aes(label = label, y=launch_angle -4),
color = "black", hjust = "left")+
geom_point(alpha = 0.05)+
scale_color_gradient("BA", low ="#32527B",high = "white")+
scale_x_continuous("EV (mph)",limits = c(40,120))+
scale_y_continuous("Launch Angle (degrees)",
breaks = seq(-75,75,25))+
facet_wrap(~batter)
ev_plot_batters
ev_plot_batters
top10_batter
#getting all ABs for top 10 batters
topbatters_all <- batted2017 %>%
filter(batter %in% top10_batter$batter)
topbatters_all
top10_batter <- batted2017 %>%
group_by(batter) %>%
summarize(avg_ev = mean(launch_speed))%>%
arrange(desc(avg_ev)) %>%
head(10) %>% pull(BAT_ID)
top10_batter <- batted2017 %>%
group_by(batter) %>%
summarize(avg_ev = mean(launch_speed))%>%
arrange(desc(avg_ev)) %>%
head(10) %>% pull(batter)
top10_batter
#getting all ABs for top 10 batters
topbatters_all <- batted2017 %>%
filter(batter %in% top10_batter)
#getting all ABs for top 10 batters
topbatters_all <- batted2017 %>%
filter(batter %in% top10_batter)
top10_batter
View(batted2017)
top10_batter
#getting all ABs for top 10 batters
topbatters_all <- batted2017 %>%
filter(batter %in% top10_batter)
#getting all ABs for top 10 batters
topbatters_all <- batted2017 %>%
group_by() %>%
filter(batter %in% top10_batter)
#getting all ABs for top 10 batters
topbatters_all <- batted2017 %>%
group_by() %>%
filter(batter %in% top10_batter)
#getting all ABs for top 10 batters
batted2017 %>%
group_by() %>%
filter(batter %in% top10_batter)
top10_batter
top10_batter <- batted2017 %>%
group_by(batter) %>%
summarize(avg_ev = mean(launch_speed),
AB = sum(AB_FL)) %>%
filter(AB > 300) %>%
arrange(desc(avg_ev)) %>%
head(10) %>% pull(batter)
top10_batter <- batted2017 %>%
group_by(batter) %>%
summarize(avg_ev = mean(launch_speed),
AB = n()) %>%
filter(AB > 300) %>%
arrange(desc(avg_ev)) %>%
head(10) %>% pull(batter)
top10_batter
guidelines <- tibble(
launch_angle =c(10,25,50),
launch_speed =40,
label = c("GB","LD","FB")
)
#getting all ABs for top 10 batters
batted2017 %>%
group_by() %>%
filter(batter %in% top10_batter)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(tidyverse)
library(Lahman)
# Chunk 3
data2008<-read_csv("https://raw.githubusercontent.com/kfcaby/MA388_Sabermetrics/master/data/all2008.csv")
# Chunk 4
berkman_data<- data2008%>%
filter(BAT_ID=="berkl001")
# Chunk 5
streaks<-function(y){
x<- rle(y)
class(x) <- "list"
return(as_tibble(x))
}
hitting_data<-berkman_data%>%
filter(AB_FL== TRUE)
hitting_data%>%
mutate(H= ifelse(H_FL>0, 1, 0),
DATE = str_sub(GAME_ID, 4, 12),
AB=1) %>%
arrange(DATE) -> hitting_data
hitting_data%>%
pull(H)%>%
streaks()%>%
filter(values==1)%>%
pull(lengths)
# Chunk 6
hitting_data%>%
pull(H)%>%
streaks()%>%
filter(values==0) -> berkman_out
berkman_out%>%
pull(lengths)
# Chunk 7
library(zoo)
moving_average <- function(df, width){
N <- nrow(df)
df %>%
transmute(Game = rollmean(1:N, k = width, fill = NA),
Average = rollsum(H, width, fill = NA)/
rollsum(AB, width, fill = NA))
}
hitting_data%>%
mutate(AB_Num = row_number())%>%
filter(H == 1)-> berkman.hit
moving_average(hitting_data, 20)%>%
ggplot(aes(Game, Average))+
geom_line()+xlab("AB")+
geom_hline(yintercept = mean(hitting_data$H))+
geom_rug(data = berkman.hit,
aes(AB_Num, .3*H), sides = "b")
# Chunk 8
hitting_clump <- hitting_data %>%
pull(H) %>%
streaks() %>%
filter(values == 0) %>%
summarize(C = sum(lengths ^ 2)) %>%
pull()
random_mix <- function(y) {
y %>%
sample() %>%
streaks() %>%
filter(values == 0) %>%
summarize(C = sum(lengths ^ 2)) %>%
pull()
}
berkman_random<- replicate(1000, random_mix(hitting_data$H))
ggplot(data.frame(berkman_random), aes(berkman_random)) +
geom_histogram(aes(y = stat(density)), bins = 20,
color = "blue", fill = "white") +
geom_vline(xintercept = hitting_clump, size = 2) +
annotate(geom = "text", x = hitting_clump * 1.15,
y = 0.0010, label = "OBSERVED", size = 5)
# Chunk 9
hitting_clump2 <- hitting_data %>%
pull(H) %>%
streaks() %>%
filter(values == 0) %>%
summarize(C = 27) %>%
pull()
random_mix2 <- function(y) {
y %>%
sample() %>%
streaks() %>%
filter(values == 0) %>%
summarize(C = 27) %>%
pull()
}
berkman_random2<- replicate(1000, random_mix(hitting_data$H))
ggplot(data.frame(berkman_random2), aes(berkman_random2)) +
geom_histogram(aes(y = stat(density)), bins = 20,
color = "blue", fill = "white") +
geom_vline(xintercept = hitting_clump2, size = 2) +
annotate(geom = "text", x = hitting_clump2 * 1.15,
y = 0.0010, label = "OBSERVED", size = 5)
# Chunk 10
data2008%>%
group_by(BAT_ID)%>%
summarise(AB= sum(AB_FL))%>%
filter(AB>=400)%>%
pull(BAT_ID) -> AB_400_Players
# Chunk 11
longest_ofer<- function(batter){
data2008%>%
filter(BAT_ID==batter, AB_FL==TRUE)%>%
mutate(H= ifelse(H_FL> 0, 1, 0),
DATE = substr(GAME_ID, 4, 12))%>%
arrange(DATE)%>%
pull(H)%>%
streaks()%>%
filter(values==0)%>%
summarize(MAX_STREAK = max(lengths))
}
reg_streaks<-AB_400_Players%>%
map_df(longest_ofer)%>%
mutate(BAT_ID=AB_400_Players)
reg_streaks%>%
inner_join(Master, by = c("BAT_ID"= "retroID"))%>%
mutate(Name = paste(nameFirst, nameLast))%>%
arrange(desc(MAX_STREAK))%>%
select(Name, MAX_STREAK)%>%
head()
reg_streaks%>%
inner_join(Master, by = c("BAT_ID"= "retroID"))%>%
mutate(Name = paste(nameFirst, nameLast))%>%
arrange(MAX_STREAK)%>%
select(Name, MAX_STREAK)%>%
head()
# Chunk 12
library(baseballr)
davis<- scrape_statcast_savant(start_date = "2017-05-01",
end_date = "2017-05-31",
playerid = 448801,
player_type = "batter")
# Chunk 13
davis_bip<- davis%>%
filter(type=="X")
spray_chart <- function(...) {
ggplot(...) +
geom_curve(x = 33, xend = 223, y = -100, yend = -100,
curvature = -.65) +
geom_segment(x = 128, xend = 33, y = -208, yend = -100) +
geom_segment(x = 128, xend = 223, y = -208, yend = -100) +
geom_curve(x = 83, xend = 173, y = -155, yend = -156,
curvature = -.65, linetype = "dotted") +
coord_fixed() +
scale_x_continuous(NULL, limits = c(25, 225)) +
scale_y_continuous(NULL, limits = c(-225, -25))
}
spray_chart(davis_bip, aes(x = hc_x, y = -hc_y, color = events)) +
geom_point()
# Chunk 14
sc <- read_csv("statcast2017.csv")
library(knitr)
sc_bips<- sc%>%
filter(type=="X")
count(sc_bips, player_name)->p.occurences
p.occurences%>%
mutate(Hits = n)
sc_bips%>%
group_by(player_name)%>%
inner_join(p.occurences, by = "player_name")%>%
mutate(AVG_Vel= sum(launch_speed)/(n)) ->sc_bips
sc_bips%>%
arrange(desc(AVG_Vel))%>%
head(10)->top_speeds
top_speeds%>%
select(player_name, AVG_Vel)%>%
kable()
# Chunk 15
# Chunk 16
library(ggplot2)
ggplot(sc_bips, aes(x=AVG_Vel))+geom_histogram()
devtools::install_github("vqv/ggbiplot")
file.edit(file.path("~", ".Rprofile"))
getwd()
moreMA206 <- read_csv(file = "../../Downloads/moreMA206.csv")
View(moreMA206)
moreMA206 %>%
arrange(taps) -> moreMA206
moreMA206 %>% head(10)
moreMA206 %>%
select(DEPT,`Last Name`, `First Name`, usma_grad_yr, taps) %>%
head(10)
moreMA206 %>%
select(DEPT,`Last Name`, `First Name`, usma_grad_yr, taps) %>%
head(20)
library(Lahman)
library(tidyverse)
Pitching %>%
filter(yearID == 1968,
GS >= 20,
ERA < 2)
Pitching %>%
filter(yearID == 1970,
GS >= 20,
ERA < 2)
Batting %>%
filter(AB >= 500,
yearID == 1968) %>%
mutate(AVG = H/AB) %>%
arrange(-AVG)
Batting %>%
filter(AB >= 500,
yearID == 1968) %>%
mutate(AVG = H/AB) %>%
arrange(-AVG) %>%
head(1)
Batting %>%
filter(AB >= 500,
yearID == 1968,
lgID == "AL") %>%
mutate(AVG = H/AB) %>%
arrange(-AVG) %>%
head(1)
Batting %>%
filter(AB >= 500,
yearID == 1970,
lgID == "AL") %>%
mutate(AVG = H/AB) %>%
arrange(-AVG) %>%
head(1)
Master %>% filter(playerID == "johnsal01")
Batting %>%
filter(yearID %in% c(1968,1970)) %>%
group_by(yearID) %>%
summarize(AVG = H/AB)
Batting %>%
filter(yearID %in% c(1968,1970)) %>%
group_by(yearID) %>%
summarize(AVG = sum(H)/sum(AB))
k = 1.905517
800^k/(800^k + 700^k)
k = 1.739909
800^k/(800^k + 700^k)
1.254-1.166
1.291-1.432
339/661
339/(661+339)
279/(279+721)
(279/721)/(339/661)
1/5000
1/50000
dates <- tibble(start_date = as_date(seq(17226, 17454, 15)),
end_date = as_date(start_date + 14))
library(tidyverse)
library(baseballr)
library(viridis)
library(lubridate)
dates <- tibble(start_date = as_date(seq(17226, 17454, 15)),
end_date = as_date(start_date + 14))
dates %>%
pmap(scrape_statcast_savant) %>%
do.call(rbind, .) %>%
filter(type == "X") -> batted2017
# determine if batted ball was a hit
batted2017 %>%
mutate(hit_flag = factor(ifelse(events %in% c("single", "double",
"triple", "home_run"),1,0))) -> batted2017
batted2017 %>%
select(Stands)
names(batted2017)
batted2017 %>% select(stand)
batted2017 %>%
select(stand, hr_x, hr_y, launch_angle, launch_speed)
batted2017 %>%
select(stand, hc_x, hc_y, launch_angle, launch_speed)
batted2017 %>%
select(stand, hc_x, hc_y, launch_angle, launch_speed, if_fielding_alignment)
batted2017 %>%
select(stand, hc_x, hc_y, launch_angle, launch_speed, if_fielding_alignment) %>%
write_csv()
batted2017 %>%
select(stand, hc_x, hc_y, launch_angle, launch_speed, if_fielding_alignment) %>%
write_csv(path = "data/teeStatCast.csv")
library(tidyverse)
library(baseballr)
library(viridis)
library(lubridate)
dates <- tibble(start_date = as_date(seq(17226, 17454, 15)),
end_date = as_date(start_date + 14))
dates %>%
pmap(scrape_statcast_savant) %>%
do.call(rbind, .) %>%
filter(type == "X") -> batted2017
View(batted2017)
batted2017 %>%
select(player_name, stand, hc_x, hc_y, launch_angle, launch_speed, if_fielding_alignment)
batted2017 %>%
select(player_name, stand, hc_x, hc_y, launch_angle, launch_speed, if_fielding_alignment) %>%
write_csv(path = "data/teeStatCast.csv")
TEE <- read_csv(file = "../../Downloads/teeStatCast(1).csv")
View(TEE)
library(tidyverse)
coronavirus <- read_csv(file = "https://raw.githubusercontent.com/RamiKrispin/coronavirus-csv/master/coronavirus_dataset.csv")
View(coronavirus)
