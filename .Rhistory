mutate(AVG = round(H/AB,3)) %>%
select(G,AB,H,HR,AVG) %>%
kable(caption = "Mattingly Career Statistics")
source("Chapter8_functions.R")
mattingly.stats <- get_stats("mattidon01")
mattingly.stats
mattingly.stats <- get_stats("mattido01")
mattingly.stats
Master %>% filter(nameLast == "Baines", nameFirst == "Harold")
stats <- c("mattido01","baineha01") %>% map_df(get_stats)
stats
stats %>%
ggplot(aes(x = Age, y = OPS, color = playerID)) +
geom_point()
stats %>%
ggplot(aes(x = Age, y = OPS, color = playerID)) +
geom_point() +
geom_smooth(method = "lm",
formula = y ~ x + I(x^2))
stats %>%
ggplot(aes(x = Age, y = OPS, color = playerID)) +
geom_point() +
geom_smooth(method = "lm",
formula = y ~ x + I(x^2),
se = FALSE)
stats %>%
ggplot(aes(x = Age, y = OPS, color = playerID)) +
geom_point() +
geom_smooth(method = "lm",
formula = y ~ x + I(x^2),
se = FALSE) +
labs(title = "Don Mattingly and Harold Baines")
vars <- c("G", "AB","R", "H", "X2B","X3B",
"HR", "RBI", "BB", "SO", "SB")
#Career totals for players with 5000 at bats
Batting %>%
group_by(playerID) %>%
summarize_at(vars,sum,na.rm = TRUE) %>%
filter(AB > 5000) %>%
mutate(AVG = H/AB,
HR.rate = HR/AB) -> career.totals
# Must have retired at least five years ago
Master %>%
filter(finalGame < 2014,
finalGame > 1920) %>%
pull(playerID) -> eligible
career.totals %>%
filter(playerID %in% eligible) -> career.totals
#determine whether they are in the hall of fame
career.totals %>%
left_join(HallOfFame %>%
filter(inducted == "Y",
category == "Player") %>%
select(playerID, yearID, inducted),
by = "playerID") %>%
replace_na(list(inducted = "N")) %>%
rename(halloffame = inducted) -> career.totals
#add full name
career.totals %>%
left_join(Master %>% select(nameLast, nameFirst, playerID)) %>%
mutate(name = paste(nameFirst,nameLast, sep = " ")) %>%
select(-nameLast,-nameFirst) -> career.totals
# Relative Statistics
p <- career.totals %>%
ggplot(aes(label = name,x = H, y = HR, color = halloffame)) +
geom_point() +
geom_text(data = filter(career.totals, playerID == "mattido01"),
aes(label = name), color = "black") +
geom_point(data = filter(career.totals, playerID == "mattido01"),
aes(x = H, y = HR), color = "black") +
labs(title = "Hall of Fame", color = "HallofFame")
ggplotly(p)
p1 <- career.totals %>%
ggplot(aes(label = name,x = AVG, y = HR.rate, color = halloffame)) +
geom_point() +
geom_text(data = filter(career.totals, playerID == "mattido01"),
aes(label = name), color = "black") +
geom_point(data = filter(career.totals, playerID == "mattido01"),
aes(x = AVG, y = HR.rate), color = "black") +
labs(title = "Hall of Fame", color = "HallofFame")
ggplotly(p1)
p1 <- career.totals %>%
ggplot(aes(label = name,x = AVG, y = HR.rate, color = halloffame)) +
geom_point() +
geom_text(data = filter(career.totals, playerID == "mattido01"),
aes(label = name), color = "black") +
geom_point(data = filter(career.totals, playerID == "mattido01"),
aes(x = AVG, y = HR.rate), color = "black") +
labs(title = "Career Totals by Hall of Fame Status")
ggplotly(p1)
# Here's a model based on aggregate statistics for the probability of Hall of Fame
library(mgcv)
career.totals
model.hof <- glm(halloffame == "Y" ~ H + X2B + X3B + HR + RBI + BB,
family = "binomial",
data = career.totals)
career.totals %>%
mutate(hof.pred = predict(model.hof,
type = response,
newdata = .))
career.totals %>%
mutate(hof.pred = predict(model.hof,
type = "response",
newdata = .)) -> career.totals
career.totals %>%
arrange(desc(hof.pred)) %>%
head(10)
career.totals %>%
arrange(desc(hof.pred)) %>%
select(name, hof.pred) %>%
head(10)
career.totals %>%
arrange(desc(hof.pred)) %>%
select(name, hof.pred, halloffame) %>%
head(10)
career.totals %>%
arrange(desc(hof.pred)) %>%
select(name, hof.pred, halloffame) %>%
head(10) %>%
kable(caption = "Top Ten Highest Predicted Probability of Hall of Fame")
career.totals %>%
arrange(desc(hof.pred)) %>%
filter(playerID == "mattido01")
career.totals %>%
arrange(desc(hof.pred)) %>%
filter(hof.pred > 0.062, hof.pred < 0.063)
career.totals %>%
arrange(desc(hof.pred)) %>%
filter(hof.pred > 0.062, hof.pred < 0.064)
model.hof <- glm(halloffame == "Y" ~ AB + H + X2B + X3B + HR + RBI + BB,
family = "binomial",
data = career.totals)
career.totals %>%
mutate(hof.pred = predict(model.hof,
type = "response",
newdata = .)) -> career.totals
career.totals %>%
arrange(desc(hof.pred)) %>%
select(name, hof.pred, halloffame) %>%
head(10) %>%
kable(caption = "Top Ten Highest Predicted Probability of Hall of Fame")
model.hof <- glm(halloffame == "Y" ~ H + X2B + X3B + HR + RBI + BB,
family = "binomial",
data = career.totals)
career.totals %>%
mutate(hof.pred = predict(model.hof,
type = "response",
newdata = .)) -> career.totals
career.totals %>%
arrange(desc(hof.pred)) %>%
select(name, hof.pred, halloffame) %>%
head(10) %>%
kable(caption = "Top Ten Highest Predicted Probability of Hall of Fame")
career.totals %>%
arrange(desc(hof.pred)) %>%
filter(hof.pred > 0.062, hof.pred < 0.064)
career.totals %>%
arrange(desc(hof.pred)) %>%
filter(hof.pred > 0.061, hof.pred < 0.064)
career.totals %>%
arrange(desc(hof.pred)) %>%
filter(hof.pred > 0.061, hof.pred < 0.064) %>%
select(name, hof.pred, halloffame) %>%
kable(caption = "Players with similar predictions as Don Mattingly")
career.totals %>% filter(name == "Roger Maris")
Batting %>%
filter(playerID %in% c("mattido01","baineha01")) %>%
summarise_at(vars, sum) %>%
mutate(AVG = round(H/AB,3)) %>%
select(G,AB,H,HR,AVG) %>%
kable(caption = "Mattingly Career Statistics")
Batting %>%
filter(playerID %in% c("mattido01","baineha01")) %>%
summarise_at(vars, sum) %>%
mutate(AVG = round(H/AB,3)) %>%
select(G,AB,H,HR,AVG) %>%
kable(caption = "Mattingly Career Statistics")
Batting %>%
filter(playerID %in% c("mattido01","baineha01")) %>%
group_by(playerID) %>%
summarise_at(vars, sum) %>%
mutate(AVG = round(H/AB,3)) %>%
select(G,AB,H,HR,AVG) %>%
kable(caption = "Mattingly Career Statistics")
Batting %>%
filter(playerID %in% c("mattido01","baineha01")) %>%
group_by(playerID) %>%
summarise_at(vars, sum) %>%
mutate(AVG = round(H/AB,3)) %>%
select(name, G,AB,H,HR,AVG) %>%
kable(caption = "Mattingly Career Statistics")
career.totals %>%
filter(playerID %in% c("mattido01","baineha01")) %>%
select(name, G,AB,H,HR,AVG) %>%
kable(caption = "Mattingly Career Statistics")
career.totals %>%
filter(playerID %in% c("mattido01","baineha01")) %>%
select(name, G,AB,H,HR,round(AVG,3)) %>%
kable(caption = "Career Statistics")
career.totals
career.totals %>%
mutate(x = (AB/(AB + BB))*newPA - AB)
newPA = 9908
career.totals %>%
mutate(x = (AB/(AB + BB))*newPA - AB)
career.totals %>%
mutate(x = (AB/(AB + BB))*newPA - AB)
career.totals %>%
mutate(x = (AB/(AB + BB))*newPA - AB) -> career.totals
career.totals %>%
filter(playerID %in% c("mattido01","baineha01")) %>%
select(name, AB, x)
vars <- c("G", "AB","R", "H", "X2B","X3B",
"HR", "RBI", "BB", "SO", "SB", "PA")
Batting %>%
filter(playerID == "mattido01") %>%
summarise_at(vars, sum) %>%
mutate(AVG = round(H/AB,3)) %>%
select(G,AB,H,HR,AVG) %>%
kable(caption = "Mattingly Career Statistics")
names(Batting)
Batting %>%
filter(playerID == "mattido01") %>%
summarise_at(vars, sum) %>%
mutate(AVG = round(H/AB,3),
PA = AB + BB + SH + HBP + SF) %>%
select(G,AB,H,HR,AVG) %>%
kable(caption = "Mattingly Career Statistics")
vars <- c("G", "AB","R", "H", "X2B","X3B",
"HR", "RBI", "BB", "SO", "SB")
Batting %>%
filter(playerID == "mattido01") %>%
summarise_at(vars, sum) %>%
mutate(AVG = round(H/AB,3),
PA = AB + BB + SH + HBP + SF) %>%
select(G,AB,H,HR,AVG) %>%
kable(caption = "Mattingly Career Statistics")
vars <- c("G", "AB","R", "H", "X2B","X3B",
"HR", "RBI", "BB", "SO", "SB", "SH", "HBP", "SF")
Batting %>%
filter(playerID == "mattido01") %>%
summarise_at(vars, sum) %>%
mutate(AVG = round(H/AB,3),
PA = AB + BB + SH + HBP + SF) %>%
select(G,AB,H,HR,AVG) %>%
kable(caption = "Mattingly Career Statistics")
career.totals %>%
filter(playerID %in% c("mattido01","baineha01")) %>%
select(name, G,PA, AB,H,HR,AVG) %>%
kable(caption = "Career Statistics")
career.totals %>%
filter(playerID %in% c("mattido01","baineha01")) %>%
select(name, G,PA, AB,H,HR,AVG) %>%
kable(caption = "Career Statistics")
vars <- c("G", "AB","R", "H", "X2B","X3B",
"HR", "RBI", "BB", "SO", "SB",
"SH", "HBP", "SF")
#Career totals for players with 5000 at bats
Batting %>%
group_by(playerID) %>%
summarize_at(vars,sum,na.rm = TRUE) %>%
filter(AB > 5000) %>%
mutate(AVG = round(H/AB,3),
HR.rate = HR/AB
PA = AB + BB + SH + HBP + SF) -> career.totals
#Career totals for players with 5000 at bats
Batting %>%
group_by(playerID) %>%
summarize_at(vars,sum,na.rm = TRUE) %>%
filter(AB > 5000) %>%
mutate(AVG = round(H/AB,3),
HR.rate = HR/AB,
PA = AB + BB + SH + HBP + SF) -> career.totals
Master %>%
filter(finalGame < 2014,
finalGame > 1920) %>%
pull(playerID) -> eligible
career.totals %>%
filter(playerID %in% eligible) -> career.totals
#determine whether they are in the hall of fame
career.totals %>%
left_join(HallOfFame %>%
filter(inducted == "Y",
category == "Player") %>%
select(playerID, yearID, inducted),
by = "playerID") %>%
replace_na(list(inducted = "N")) %>%
rename(halloffame = inducted) -> career.totals
#add full name
career.totals %>%
left_join(Master %>% select(nameLast, nameFirst, playerID)) %>%
mutate(name = paste(nameFirst,nameLast, sep = " ")) %>%
select(-nameLast,-nameFirst) -> career.totals
# Career Totals
p2 <- career.totals %>%
ggplot(aes(label = name,x = H, y = HR, color = halloffame)) +
geom_point() +
geom_text(data = filter(career.totals, playerID == "mattido01"),
aes(label = name), color = "black") +
geom_point(data = filter(career.totals, playerID == "mattido01"),
aes(x = H, y = HR), color = "black") +
labs(title = "Career Totals by Hall of Fame Status")
#ggplotly(p2)
p2
# Here's a model based on aggregate statistics for the probability of Hall of Fame
library(mgcv)
model.hof <- glm(halloffame == "Y" ~ H + X2B + X3B + HR + RBI + BB,
family = "binomial",
data = career.totals)
career.totals %>%
mutate(hof.pred = predict(model.hof,
type = "response",
newdata = .)) -> career.totals
career.totals %>%
arrange(desc(hof.pred)) %>%
select(name, hof.pred, halloffame) %>%
head(10) %>%
kable(caption = "Top Ten Highest Predicted Probability of Hall of Fame")
career.totals %>%
arrange(desc(hof.pred)) %>%
filter(hof.pred > 0.061, hof.pred < 0.064) %>%
select(name, hof.pred, halloffame) %>%
kable(caption = "Players with similar predictions as Don Mattingly")
# Relative Statistics
p1 <- career.totals %>%
ggplot(aes(label = name,x = AVG, y = HR.rate, color = halloffame)) +
geom_point() +
geom_text(data = filter(career.totals, playerID == "mattido01"),
aes(label = name), color = "black") +
geom_point(data = filter(career.totals, playerID == "mattido01"),
aes(x = AVG, y = HR.rate), color = "black") +
labs(title = "Career Totals by Hall of Fame Status")
#ggplotly(p1)
p1
career.totals %>%
filter(playerID %in% c("mattido01","baineha01")) %>%
select(name, G,PA, AB,H,HR,AVG) %>%
kable(caption = "Career Statistics")
newPA = 9908
career.totals %>%
mutate(x = (AB/(AB + BB))*newPA - AB) -> career.totals
career.totals %>%
filter(playerID %in% c("mattido01","baineha01")) %>%
select(name, AB, x)
newPA = 11092
career.totals %>%
mutate(x = (AB/(AB + BB))*newPA - AB) -> career.totals
career.totals %>%
filter(playerID %in% c("mattido01","baineha01")) %>%
select(name, AB, x)
newPA = 12000
career.totals %>%
mutate(x = (AB/(AB + BB))*newPA - AB) -> career.totals
career.totals %>%
filter(playerID %in% c("mattido01","baineha01")) %>%
select(name, AB, x)
k = c(1, 0.95, 0.90)
career.totals %>%
filter(playerID = "mattido01") %>%
mutate(test = 1 + x/AB * k)
career.totals %>%
filter(playerID == "mattido01") %>%
mutate(test = 1 + x/AB * k)
career.totals %>%
filter(playerID == "mattido01") %>%
mutate(test = 1 + x/AB * 0.95)
career.totals %>%
filter(playerID == "mattido01") %>%
mutate(EC = 1 + x/AB * 0.95)
career.totals %>%
filter(playerID == "mattido01") %>%
mutate(EC1 = 1 + x/AB * 1,
EC.95 = 1 + x/AB * 0.95,
EC.90 = 1 + x/AB * 0.95)
career.totals %>%
filter(playerID == "mattido01") %>%
mutate(EC1 = 1 + x/AB * 1,
EC.95 = 1 + x/AB * 0.95,
EC.90 = 1 + x/AB * 0.90)
eqcoef <- function(k, d){
d %>%
mutate(k = k,
EC = 1 + x/AB * k,
H = H*EC,
X2B = X2B * EC,
X3B = X3B * EC,
HR = HR * EC,
) -> d
return(d %>% select(playerID, name, k, EC, H, X2B, X3B, HR))
}
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "mattido01"))
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "mattido01")) %>%
rbind(career.totals %>% filter(playerID == "baineha01"))
career.totals %>%
filter("baineha01")
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "mattido01")) -> matty.ec
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "baibedo01")) -> baine.ec
rbind(matty.ec, baine.ec) %>%
kable()
rbind(matty.ec, baine.ec) %>%
kable()
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "mattido01")) -> matty.ec
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "baibedo01")) -> baine.ec
rbind(matty.ec, baine.ec) %>%
kable()
rbind(matty.ec, baine.ec)
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "baibedo01")) -> baine.ec
baine.ec
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "baineha01")) -> baine.ec
rbind(matty.ec, baine.ec)
rbind(matty.ec, baine.ec) %>%
kable()
eqcoef <- function(k, d){
d %>%
mutate(k = k,
EC = 1 + x/AB * k,
H = H*EC,
X2B = X2B * EC,
X3B = X3B * EC,
HR = HR * EC,
RBI = RBI * EC,
BB = BB * EC
) -> d
return(d %>% select(playerID, name, k, EC, H, X2B, X3B, HR, RBI, BB))
}
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "mattido01")) -> matty.ec
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "baineha01")) -> baine.ec
rbind(matty.ec, baine.ec) %>%
kable()
d %>%
mutate(k = k,
EC = 1 + x/AB * k,
H = round(H*EC,0),
X2B = X2B * EC,
X3B = X3B * EC,
HR = HR * EC,
RBI = RBI * EC,
BB = BB * EC
) -> d
eqcoef <- function(k, d){
d %>%
mutate(k = k,
EC = 1 + x/AB * k,
H = round(H*EC,0),
X2B = X2B * EC,
X3B = X3B * EC,
HR = HR * EC,
RBI = RBI * EC,
BB = BB * EC
) -> d
return(d %>% select(playerID, name, k, EC, H, X2B, X3B, HR, RBI, BB))
}
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "mattido01")) -> matty.ec
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "baineha01")) -> baine.ec
rbind(matty.ec, baine.ec) %>%
kable()
eqcoef <- function(k, d){
d %>%
mutate(k = k,
EC = 1 + x/AB * k,
H = round(H*EC,0),
X2B = round(X2B * EC,0),
X3B = round(X3B * EC,0),
HR = round(HR * EC,0),
RBI = round(RBI * EC,0),
BB = round(BB * EC,0)
) -> d
return(d %>% select(playerID, name, k, EC, H, X2B, X3B, HR, RBI, BB))
}
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "mattido01")) -> matty.ec
k %>%
map_df(eqcoef, d = career.totals %>% filter(playerID == "baineha01")) -> baine.ec
rbind(matty.ec, baine.ec) %>%
kable()
matty.ec %>%
mutate(hof.pred = predict(model.hof,
type = "response",
newdata = .))
matty.ec %>%
select(name, k, hof.pred) %>%
kable()
matty.ec %>%
mutate(hof.pred = predict(model.hof,
type = "response",
newdata = .)) -> matty.ec
matty.ec %>%
select(name, k, hof.pred) %>%
kable()
#players similar at 'hypothetical mattingly'
career.totals %>%
filter(hof.pred > 0.62, hof.pred < 0.64)
#players similar at 'hypothetical mattingly'
career.totals %>%
filter(hof.pred > 0.61, hof.pred < 0.64) %>%
select(name, hof.pred, halloffame)
#players similar at 'hypothetical mattingly'
career.totals %>%
filter(hof.pred > 0.60, hof.pred < 0.65) %>%
select(name, hof.pred, halloffame)
